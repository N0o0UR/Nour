<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tidymodels | HOME</title>
    <link>/category/tidymodels/</link>
      <atom:link href="/category/tidymodels/index.xml" rel="self" type="application/rss+xml" />
    <description>tidymodels</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 02 Aug 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_2.png</url>
      <title>tidymodels</title>
      <link>/category/tidymodels/</link>
    </image>
    
    <item>
      <title>project</title>
      <link>/post/project/</link>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      <guid>/post/project/</guid>
      <description>
&lt;script src=&#34;/post/project/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;the-goal&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The Goal&lt;/h2&gt;
&lt;p&gt;The Goal of this study is to help the credit card provider company CredX to identify the right customer based on predictive model where the past data of the bank’s applicants was used to built the predictive model and determine the factors affecting credit risk.&lt;/p&gt;
&lt;p&gt;Three models were created which are the Logistic regression, random forest and support vector machine among which the best model is defined as the model with the best accuracy taking inconsideration the sensitivity and specificity.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The Data&lt;/h2&gt;
&lt;p&gt;The data provided are two data frames one provide the Demographic data that is obtained from the applicants at the time of the credit card application and the other is Credit Bureau which is taken from the credit bureau.The Demographic data composed of 71295 observations for 11 independent variables and one dependent variable that is the performance_tag while the size of the Credit Bureau is also 71295 observations for 18 independent variables and one dependent variable that is the performance_tag.&lt;/p&gt;
&lt;p&gt;During the study we will provide two models the first one is based on the Demographic data only and the second one is based on both the Demographic data and the Credit Bureau data to check the predictive power of the application data.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;univariate-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Univariate Analysis&lt;/h2&gt;
&lt;p&gt;In the univariate analysis, it is easy notice the frequency of data in the dataset through the graphs. The most frequent values of the dominant predictors are listed as shown below,&lt;/p&gt;
&lt;ol style=&#34;list-style-type: lower-roman&#34;&gt;
&lt;li&gt;Age - 38 years&lt;/li&gt;
&lt;li&gt;Gender - Male&lt;/li&gt;
&lt;li&gt;Marital Status - Married&lt;/li&gt;
&lt;li&gt;Number of dependents - 3&lt;/li&gt;
&lt;li&gt;Income - $&lt;/li&gt;
&lt;li&gt;Education - Professional Education&lt;/li&gt;
&lt;li&gt;Type of Residence - Rented&lt;/li&gt;
&lt;li&gt;Employement in current company - 60&lt;/li&gt;
&lt;li&gt;Profession - SAL&lt;/li&gt;
&lt;li&gt;Average CC utilisation in last 12 months - 10&lt;/li&gt;
&lt;li&gt;Trades opened in last 6 months - 1&lt;/li&gt;
&lt;li&gt;Trades opened in last 12 months - 2&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;bivariate-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Bivariate Analysis&lt;/h2&gt;
&lt;p&gt;In the Bivariate Analysis, the correlation plot is easily identified for the demogs data and combined data in the above cluster of plots.&lt;/p&gt;
&lt;p&gt;Then the dataset is briefly analysed by the scatter plots between Performance Tag and&lt;/p&gt;
&lt;ol style=&#34;list-style-type: lower-roman&#34;&gt;
&lt;li&gt;No of dependents&lt;/li&gt;
&lt;li&gt;Income&lt;/li&gt;
&lt;li&gt;No of months in current residence&lt;/li&gt;
&lt;li&gt;No of months in current residence&lt;/li&gt;
&lt;li&gt;No of times 90 dpd or worse in last 6 months&lt;/li&gt;
&lt;li&gt;No of times 60 dpd or worse in last 6 months&lt;/li&gt;
&lt;li&gt;No of times 30 dpd or worse in last 6 months&lt;/li&gt;
&lt;li&gt;No of times 90 dpd or worse in last 12 months&lt;/li&gt;
&lt;li&gt;No of times 60 dpd or worse in last 12 months&lt;/li&gt;
&lt;li&gt;No of times 30 dpd or worse in last 12 months&lt;/li&gt;
&lt;li&gt;Average CC utilisation in last 12 months&lt;/li&gt;
&lt;li&gt;Average CC utilisation in last 6 months&lt;/li&gt;
&lt;li&gt;No of Trades opened in last 12 months&lt;/li&gt;
&lt;li&gt;No of Trades opened in last 6 months&lt;/li&gt;
&lt;li&gt;No of PL Trades opened in last 12 months&lt;/li&gt;
&lt;li&gt;No of PL Trades opened in last 6 months&lt;/li&gt;
&lt;li&gt;Presence of Open Home loan&lt;/li&gt;
&lt;li&gt;Outstanding Balance&lt;/li&gt;
&lt;li&gt;Total No of trades&lt;/li&gt;
&lt;li&gt;Presence of Open Auto loan&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;## tibble [69,870 x 12] (S3: tbl_df/tbl/data.frame)
##  $ application_id                           : num [1:69870] 9.54e+08 4.33e+08 9.41e+08 3.92e+08 1.82e+08 ...
##  $ age                                      : num [1:69870] 48 31 32 43 35 20 42 34 30 22 ...
##  $ gender                                   : chr [1:69870] &amp;quot;F&amp;quot; &amp;quot;M&amp;quot; &amp;quot;M&amp;quot; &amp;quot;M&amp;quot; ...
##  $ marital_status_at_the_time_of_application: chr [1:69870] &amp;quot;Married&amp;quot; &amp;quot;Married&amp;quot; &amp;quot;Single&amp;quot; &amp;quot;Married&amp;quot; ...
##  $ no_of_dependents                         : num [1:69870] 2 4 2 1 5 1 2 2 3 1 ...
##  $ income                                   : num [1:69870] 40 55 46 53 44 39 55 49 48 38 ...
##  $ education                                : chr [1:69870] &amp;quot;Bachelor&amp;quot; &amp;quot;Professional&amp;quot; &amp;quot;Bachelor&amp;quot; &amp;quot;Bachelor&amp;quot; ...
##  $ profession                               : chr [1:69870] &amp;quot;SAL&amp;quot; &amp;quot;SE_PROF&amp;quot; &amp;quot;SE_PROF&amp;quot; &amp;quot;SE&amp;quot; ...
##  $ type_of_residence                        : chr [1:69870] &amp;quot;Rented&amp;quot; &amp;quot;Rented&amp;quot; &amp;quot;Rented&amp;quot; &amp;quot;Rented&amp;quot; ...
##  $ no_of_months_in_current_residence        : num [1:69870] 113 112 104 94 112 116 104 108 115 111 ...
##  $ no_of_months_in_current_company          : num [1:69870] 56 46 49 53 43 52 41 40 58 57 ...
##  $ performance_tag                          : num [1:69870] 0 0 0 0 0 0 0 0 0 0 ...
##  - attr(*, &amp;quot;spec&amp;quot;)=
##   .. cols(
##   ..   `Application ID` = col_double(),
##   ..   Age = col_double(),
##   ..   Gender = col_character(),
##   ..   `Marital Status (at the time of application)` = col_character(),
##   ..   `No of dependents` = col_double(),
##   ..   Income = col_double(),
##   ..   Education = col_character(),
##   ..   Profession = col_character(),
##   ..   `Type of residence` = col_character(),
##   ..   `No of months in current residence` = col_double(),
##   ..   `No of months in current company` = col_double(),
##   ..   `Performance Tag` = col_double()
##   .. )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## demogs_data 
## 
##  12  Variables      69870  Observations
## --------------------------------------------------------------------------------
## application_id 
##         n   missing  distinct      Info      Mean       Gmd       .05       .10 
##     69870         0     69867         1 499226413 333192630  50010162  99493659 
##       .25       .50       .75       .90       .95 
## 248578041 498048707 749864490 899535686 949412069 
## 
## lowest :     100450     128993     142768     176721     197956
## highest: 1000026076 1000026258 1000057167 1000072652 1000084142
## --------------------------------------------------------------------------------
## age 
##        n  missing distinct     Info     Mean      Gmd      .05      .10 
##    69870        0       53    0.999       45    11.38       29       31 
##      .25      .50      .75      .90      .95 
##       37       45       53       58       62 
## 
## lowest : -3  0 15 16 17, highest: 61 62 63 64 65
## --------------------------------------------------------------------------------
## gender 
##        n  missing distinct 
##    69868        2        2 
##                       
## Value          F     M
## Frequency  16506 53362
## Proportion 0.236 0.764
## --------------------------------------------------------------------------------
## marital_status_at_the_time_of_application 
##        n  missing distinct 
##    69864        6        2 
##                           
## Value      Married  Single
## Frequency    59547   10317
## Proportion   0.852   0.148
## --------------------------------------------------------------------------------
## no_of_dependents 
##        n  missing distinct     Info     Mean      Gmd 
##    69867        3        5    0.958     2.86    1.564 
## 
## lowest : 1 2 3 4 5, highest: 1 2 3 4 5
##                                         
## Value          1     2     3     4     5
## Frequency  15218 15128 15645 12000 11876
## Proportion 0.218 0.217 0.224 0.172 0.170
## --------------------------------------------------------------------------------
## income 
##        n  missing distinct     Info     Mean      Gmd      .05      .10 
##    69870        0       63    0.999    27.41    17.81      4.5      6.0 
##      .25      .50      .75      .90      .95 
##     14.0     27.0     40.0     49.0     54.0 
## 
## lowest : -0.5  0.0  1.0  2.0  3.0, highest: 56.0 57.0 58.0 59.0 60.0
## --------------------------------------------------------------------------------
## education 
##        n  missing distinct 
##    69752      118        5 
## 
## lowest : Bachelor     Masters      Others       Phd          Professional
## highest: Bachelor     Masters      Others       Phd          Professional
##                                                                            
## Value          Bachelor      Masters       Others          Phd Professional
## Frequency         17302        23481          119         4464        24386
## Proportion        0.248        0.337        0.002        0.064        0.350
## --------------------------------------------------------------------------------
## profession 
##        n  missing distinct 
##    69857       13        3 
##                                   
## Value          SAL      SE SE_PROF
## Frequency    39674   13927   16256
## Proportion   0.568   0.199   0.233
## --------------------------------------------------------------------------------
## type_of_residence 
##        n  missing distinct 
##    69862        8        5 
## 
## lowest : Company provided    Living with Parents Others              Owned               Rented             
## highest: Company provided    Living with Parents Others              Owned               Rented             
##                                                                       
## Value         Company provided Living with Parents              Others
## Frequency                 1603                1778                 198
## Proportion               0.023               0.025               0.003
##                                                   
## Value                    Owned              Rented
## Frequency                14003               52280
## Proportion               0.200               0.748
## --------------------------------------------------------------------------------
## no_of_months_in_current_residence 
##        n  missing distinct     Info     Mean      Gmd      .05      .10 
##    69870        0      121    0.889    34.61    38.07        6        6 
##      .25      .50      .75      .90      .95 
##        6       10       61       98      110 
## 
## lowest :   6   7   8   9  10, highest: 122 123 124 125 126
## --------------------------------------------------------------------------------
## no_of_months_in_current_company 
##        n  missing distinct     Info     Mean      Gmd      .05      .10 
##    69870        0       83        1     34.2    23.45        3        6 
##      .25      .50      .75      .90      .95 
##       17       34       51       62       68 
## 
## lowest :   3   4   5   6   7, highest: 121 123 126 128 133
## --------------------------------------------------------------------------------
## performance_tag 
##        n  missing distinct     Info      Sum     Mean      Gmd 
##    69870        0        2    0.121     2948  0.04219  0.08083 
## 
## --------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##              application_id           age gender
## nbr.val        6.987000e+04  6.987000e+04     NA
## nbr.null       0.000000e+00  1.900000e+01     NA
## nbr.na         0.000000e+00  0.000000e+00     NA
## min            1.004500e+05 -3.000000e+00     NA
## max            1.000084e+09  6.500000e+01     NA
## range          9.999837e+08  6.800000e+01     NA
## sum            3.488095e+13  3.143841e+06     NA
## median         4.980487e+08  4.500000e+01     NA
## mean           4.992264e+08  4.499558e+01     NA
## SE.mean        1.091638e+06  3.756691e-02     NA
## CI.mean.0.95   2.139608e+06  7.363106e-02     NA
## var            8.326222e+16  9.860561e+01     NA
## std.dev        2.885519e+08  9.930036e+00     NA
## coef.var       5.779981e-01  2.206892e-01     NA
##              marital_status_at_the_time_of_application no_of_dependents
## nbr.val                                             NA     6.986700e+04
## nbr.null                                            NA     0.000000e+00
## nbr.na                                              NA     3.000000e+00
## min                                                 NA     1.000000e+00
## max                                                 NA     5.000000e+00
## range                                               NA     4.000000e+00
## sum                                                 NA     1.997890e+05
## median                                              NA     3.000000e+00
## mean                                                NA     2.859562e+00
## SE.mean                                             NA     5.241886e-03
## CI.mean.0.95                                        NA     1.027408e-02
## var                                                 NA     1.919761e+00
## std.dev                                             NA     1.385554e+00
## coef.var                                            NA     4.845338e-01
##                     income education profession type_of_residence
## nbr.val       6.987000e+04        NA         NA                NA
## nbr.null      2.600000e+01        NA         NA                NA
## nbr.na        0.000000e+00        NA         NA                NA
## min          -5.000000e-01        NA         NA                NA
## max           6.000000e+01        NA         NA                NA
## range         6.050000e+01        NA         NA                NA
## sum           1.915029e+06        NA         NA                NA
## median        2.700000e+01        NA         NA                NA
## mean          2.740845e+01        NA         NA                NA
## SE.mean       5.854818e-02        NA         NA                NA
## CI.mean.0.95  1.147543e-01        NA         NA                NA
## var           2.395067e+02        NA         NA                NA
## std.dev       1.547600e+01        NA         NA                NA
## coef.var      5.646435e-01        NA         NA                NA
##              no_of_months_in_current_residence no_of_months_in_current_company
## nbr.val                           6.987000e+04                    6.987000e+04
## nbr.null                          0.000000e+00                    0.000000e+00
## nbr.na                            0.000000e+00                    0.000000e+00
## min                               6.000000e+00                    3.000000e+00
## max                               1.260000e+02                    1.330000e+02
## range                             1.200000e+02                    1.300000e+02
## sum                               2.418071e+06                    2.389497e+06
## median                            1.000000e+01                    3.400000e+01
## mean                              3.460814e+01                    3.419918e+01
## SE.mean                           1.393930e-01                    7.698814e-02
## CI.mean.0.95                      2.732100e-01                    1.508966e-01
## var                               1.357602e+03                    4.141317e+02
## std.dev                           3.684566e+01                    2.035023e+01
## coef.var                          1.064653e+00                    5.950500e-01
##              performance_tag
## nbr.val         6.987000e+04
## nbr.null        6.692200e+04
## nbr.na          0.000000e+00
## min             0.000000e+00
## max             1.000000e+00
## range           1.000000e+00
## sum             2.948000e+03
## median          0.000000e+00
## mean            4.219264e-02
## SE.mean         7.605280e-04
## CI.mean.0.95    1.490633e-03
## var             4.041300e-02
## std.dev         2.010299e-01
## coef.var        4.764571e+00&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-2.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-3.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-4.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between Number of dependents and performance Tag is -0.000307697&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between Number of dependents and performance Tag is -0.03872444&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between Number of dependents and performance Tag is 0.01625466&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between Number of dependents and performance Tag is -0.01903269&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                                   application_id   age no_of_dependents income
## application_id                              1.00  0.00            -0.01   0.00
## age                                         0.00  1.00             0.17   0.06
## no_of_dependents                           -0.01  0.17             1.00   0.03
## income                                      0.00  0.06             0.03   1.00
## no_of_months_in_current_residence           0.00 -0.07            -0.01  -0.09
## no_of_months_in_current_company             0.00 -0.02            -0.01  -0.10
## performance_tag                             0.00  0.00             0.00  -0.04
##                                   no_of_months_in_current_residence
## application_id                                                 0.00
## age                                                           -0.07
## no_of_dependents                                              -0.01
## income                                                        -0.09
## no_of_months_in_current_residence                              1.00
## no_of_months_in_current_company                               -0.08
## performance_tag                                                0.02
##                                   no_of_months_in_current_company
## application_id                                               0.00
## age                                                         -0.02
## no_of_dependents                                            -0.01
## income                                                      -0.10
## no_of_months_in_current_residence                           -0.08
## no_of_months_in_current_company                              1.00
## performance_tag                                             -0.02
##                                   performance_tag
## application_id                               0.00
## age                                          0.00
## no_of_dependents                             0.00
## income                                      -0.04
## no_of_months_in_current_residence            0.02
## no_of_months_in_current_company             -0.02
## performance_tag                              1.00&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## tibble [69,870 x 19] (S3: tbl_df/tbl/data.frame)
##  $ application_id                                             : num [1:69870] 9.54e+08 4.33e+08 9.41e+08 3.92e+08 1.82e+08 ...
##  $ no_of_times_90_dpd_or_worse_in_last_6_months               : num [1:69870] 0 0 0 0 0 0 0 0 0 0 ...
##  $ no_of_times_60_dpd_or_worse_in_last_6_months               : num [1:69870] 0 0 0 0 0 0 0 0 0 0 ...
##  $ no_of_times_30_dpd_or_worse_in_last_6_months               : num [1:69870] 0 0 0 0 0 0 0 0 0 0 ...
##  $ no_of_times_90_dpd_or_worse_in_last_12_months              : num [1:69870] 0 0 0 0 0 0 0 0 0 0 ...
##  $ no_of_times_60_dpd_or_worse_in_last_12_months              : num [1:69870] 0 0 0 0 0 0 0 0 0 0 ...
##  $ no_of_times_30_dpd_or_worse_in_last_12_months              : num [1:69870] 0 0 0 0 0 0 0 0 1 0 ...
##  $ avgas_cc_utilization_in_last_12_months                     : num [1:69870] 4 3 7 11 12 10 11 13 9 6 ...
##  $ no_of_trades_opened_in_last_6_months                       : num [1:69870] 1 1 0 1 0 0 0 1 0 1 ...
##  $ no_of_trades_opened_in_last_12_months                      : num [1:69870] 2 2 0 1 1 0 1 1 0 1 ...
##  $ no_of_pl_trades_opened_in_last_6_months                    : num [1:69870] 0 0 0 0 0 0 0 0 0 0 ...
##  $ no_of_pl_trades_opened_in_last_12_months                   : num [1:69870] 0 0 0 0 0 0 0 0 0 0 ...
##  $ no_of_inquiries_in_last_6_months_excluding_home_auto_loans : num [1:69870] 0 0 0 0 0 0 0 0 0 0 ...
##  $ no_of_inquiries_in_last_12_months_excluding_home_auto_loans: num [1:69870] 0 0 0 0 0 0 0 0 0 0 ...
##  $ presence_of_open_home_loan                                 : num [1:69870] 1 0 1 1 1 0 1 1 1 0 ...
##  $ outstanding_balance                                        : num [1:69870] 2999395 3078 3004972 3355373 3014283 ...
##  $ total_no_of_trades                                         : num [1:69870] 4 5 2 4 4 1 4 3 2 1 ...
##  $ presence_of_open_auto_loan                                 : num [1:69870] 0 0 0 1 0 0 0 0 0 1 ...
##  $ performance_tag                                            : num [1:69870] 0 0 0 0 0 0 0 0 0 0 ...
##  - attr(*, &amp;quot;spec&amp;quot;)=
##   .. cols(
##   ..   `Application ID` = col_double(),
##   ..   `No of times 90 DPD or worse in last 6 months` = col_double(),
##   ..   `No of times 60 DPD or worse in last 6 months` = col_double(),
##   ..   `No of times 30 DPD or worse in last 6 months` = col_double(),
##   ..   `No of times 90 DPD or worse in last 12 months` = col_double(),
##   ..   `No of times 60 DPD or worse in last 12 months` = col_double(),
##   ..   `No of times 30 DPD or worse in last 12 months` = col_double(),
##   ..   `Avgas CC Utilization in last 12 months` = col_double(),
##   ..   `No of trades opened in last 6 months` = col_double(),
##   ..   `No of trades opened in last 12 months` = col_double(),
##   ..   `No of PL trades opened in last 6 months` = col_double(),
##   ..   `No of PL trades opened in last 12 months` = col_double(),
##   ..   `No of Inquiries in last 6 months (excluding home &amp;amp; auto loans)` = col_double(),
##   ..   `No of Inquiries in last 12 months (excluding home &amp;amp; auto loans)` = col_double(),
##   ..   `Presence of open home loan` = col_double(),
##   ..   `Outstanding Balance` = col_double(),
##   ..   `Total No of Trades` = col_double(),
##   ..   `Presence of open auto loan` = col_double(),
##   ..   `Performance Tag` = col_double()
##   .. )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## credit_bureau_data 
## 
##  19  Variables      69870  Observations
## --------------------------------------------------------------------------------
## application_id 
##         n   missing  distinct      Info      Mean       Gmd       .05       .10 
##     69870         0     69867         1 499226413 333192630  50010162  99493659 
##       .25       .50       .75       .90       .95 
## 248578041 498048707 749864490 899535686 949412069 
## 
## lowest :     100450     128993     142768     176721     197956
## highest: 1000026076 1000026258 1000057167 1000072652 1000084142
## --------------------------------------------------------------------------------
## no_of_times_90_dpd_or_worse_in_last_6_months 
##        n  missing distinct     Info     Mean      Gmd 
##    69870        0        4    0.514    0.249   0.4016 
##                                   
## Value          0     1     2     3
## Frequency  54666 13220  1776   208
## Proportion 0.782 0.189 0.025 0.003
## --------------------------------------------------------------------------------
## no_of_times_60_dpd_or_worse_in_last_6_months 
##        n  missing distinct     Info     Mean      Gmd 
##    69870        0        6    0.586   0.3917   0.6297 
## 
## lowest : 0 1 2 3 4, highest: 1 2 3 4 5
##                                               
## Value          0     1     2     3     4     5
## Frequency  51871 11132  4917  1469   411    70
## Proportion 0.742 0.159 0.070 0.021 0.006 0.001
## --------------------------------------------------------------------------------
## no_of_times_30_dpd_or_worse_in_last_6_months 
##        n  missing distinct     Info     Mean      Gmd 
##    69870        0        8    0.628   0.5235   0.8348 
## 
## lowest : 0 1 2 3 4, highest: 3 4 5 6 7
##                                                           
## Value          0     1     2     3     4     5     6     7
## Frequency  50099  9501  5898  2830  1045   386    96    15
## Proportion 0.717 0.136 0.084 0.041 0.015 0.006 0.001 0.000
## --------------------------------------------------------------------------------
## no_of_times_90_dpd_or_worse_in_last_12_months 
##        n  missing distinct     Info     Mean      Gmd 
##    69870        0        6    0.617   0.4148   0.6505 
## 
## lowest : 0 1 2 3 4, highest: 1 2 3 4 5
##                                               
## Value          0     1     2     3     4     5
## Frequency  50494 11663  6161  1244   272    36
## Proportion 0.723 0.167 0.088 0.018 0.004 0.001
## --------------------------------------------------------------------------------
## no_of_times_60_dpd_or_worse_in_last_12_months 
##        n  missing distinct     Info     Mean      Gmd 
##    69870        0        8     0.71   0.6034   0.9091 
## 
## lowest : 0 1 2 3 4, highest: 3 4 5 6 7
##                                                           
## Value          0     1     2     3     4     5     6     7
## Frequency  45869 12816  6416  3205  1048   398   111     7
## Proportion 0.656 0.183 0.092 0.046 0.015 0.006 0.002 0.000
## --------------------------------------------------------------------------------
## no_of_times_30_dpd_or_worse_in_last_12_months 
##        n  missing distinct     Info     Mean      Gmd      .05      .10 
##    69870        0       10     0.73   0.7339    1.109        0        0 
##      .25      .50      .75      .90      .95 
##        0        0        1        3        3 
## 
## lowest : 0 1 2 3 4, highest: 5 6 7 8 9
##                                                                       
## Value          0     1     2     3     4     5     6     7     8     9
## Frequency  44858 11474  6117  4137  1924   853   376   107    23     1
## Proportion 0.642 0.164 0.088 0.059 0.028 0.012 0.005 0.002 0.000 0.000
## --------------------------------------------------------------------------------
## avgas_cc_utilization_in_last_12_months 
##        n  missing distinct     Info     Mean      Gmd      .05      .10 
##    68847     1023      114    0.999    29.27    30.06        3        5 
##      .25      .50      .75      .90      .95 
##        8       15       45       72      104 
## 
## lowest :   0   1   2   3   4, highest: 109 110 111 112 113
## --------------------------------------------------------------------------------
## no_of_trades_opened_in_last_6_months 
##        n  missing distinct     Info     Mean      Gmd      .05      .10 
##    69869        1       13    0.962    2.285    2.197        0        0 
##      .25      .50      .75      .90      .95 
##        1        2        3        5        7 
## 
## lowest :  0  1  2  3  4, highest:  8  9 10 11 12
##                                                                             
## Value          0     1     2     3     4     5     6     7     8     9    10
## Frequency  12194 20122 12117  9403  6297  3665  2336  1649  1154   618   238
## Proportion 0.175 0.288 0.173 0.135 0.090 0.052 0.033 0.024 0.017 0.009 0.003
##                       
## Value         11    12
## Frequency     65    11
## Proportion 0.001 0.000
## --------------------------------------------------------------------------------
## no_of_trades_opened_in_last_12_months 
##        n  missing distinct     Info     Mean      Gmd      .05      .10 
##    69870        0       29    0.991    5.785    5.501        0        1 
##      .25      .50      .75      .90      .95 
##        2        4        9       13       16 
## 
## lowest :  0  1  2  3  4, highest: 24 25 26 27 28
## --------------------------------------------------------------------------------
## no_of_pl_trades_opened_in_last_6_months 
##        n  missing distinct     Info     Mean      Gmd 
##    69870        0        7    0.897     1.19    1.426 
## 
## lowest : 0 1 2 3 4, highest: 2 3 4 5 6
##                                                     
## Value          0     1     2     3     4     5     6
## Frequency  31081 13548 12565  7949  3341  1090   296
## Proportion 0.445 0.194 0.180 0.114 0.048 0.016 0.004
## --------------------------------------------------------------------------------
## no_of_pl_trades_opened_in_last_12_months 
##        n  missing distinct     Info     Mean      Gmd      .05      .10 
##    69870        0       13    0.944    2.363    2.645        0        0 
##      .25      .50      .75      .90      .95 
##        0        2        4        6        7 
## 
## lowest :  0  1  2  3  4, highest:  8  9 10 11 12
##                                                                             
## Value          0     1     2     3     4     5     6     7     8     9    10
## Frequency  25825  6641  6830  8131  7904  6189  4023  2223  1172   601   255
## Proportion 0.370 0.095 0.098 0.116 0.113 0.089 0.058 0.032 0.017 0.009 0.004
##                       
## Value         11    12
## Frequency     66    10
## Proportion 0.001 0.000
## --------------------------------------------------------------------------------
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans 
##        n  missing distinct     Info     Mean      Gmd      .05      .10 
##    69870        0       11    0.939    1.758    2.052        0        0 
##      .25      .50      .75      .90      .95 
##        0        1        3        5        6 
## 
## lowest :  0  1  2  3  4, highest:  6  7  8  9 10
##                                                                             
## Value          0     1     2     3     4     5     6     7     8     9    10
## Frequency  25069 13177 12832  7258  4248  3019  1750  1149   835   425   108
## Proportion 0.359 0.189 0.184 0.104 0.061 0.043 0.025 0.016 0.012 0.006 0.002
## --------------------------------------------------------------------------------
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans 
##        n  missing distinct     Info     Mean      Gmd      .05      .10 
##    69870        0       21    0.969    3.525    3.846        0        0 
##      .25      .50      .75      .90      .95 
##        0        3        5        9       11 
## 
## lowest :  0  1  2  3  4, highest: 16 17 18 19 20
## --------------------------------------------------------------------------------
## presence_of_open_home_loan 
##        n  missing distinct     Info      Sum     Mean      Gmd 
##    69598      272        2    0.577    18071   0.2596   0.3845 
## 
## --------------------------------------------------------------------------------
## outstanding_balance 
##        n  missing distinct     Info     Mean      Gmd      .05      .10 
##    69598      272    63947        1  1253338  1371190     2649     6848 
##      .25      .50      .75      .90      .95 
##   208391   774235  2926224  3282343  3650667 
## 
## lowest :       0       1       2       4       5
## highest: 5046778 5047711 5052166 5151848 5218801
## --------------------------------------------------------------------------------
## total_no_of_trades 
##        n  missing distinct     Info     Mean      Gmd      .05      .10 
##    69870        0       45    0.994    8.175    7.164        1        2 
##      .25      .50      .75      .90      .95 
##        3        6       10       20       25 
## 
## lowest :  0  1  2  3  4, highest: 40 41 42 43 44
## --------------------------------------------------------------------------------
## presence_of_open_auto_loan 
##        n  missing distinct     Info      Sum     Mean      Gmd 
##    69870        0        2    0.233     5930  0.08487   0.1553 
## 
## --------------------------------------------------------------------------------
## performance_tag 
##        n  missing distinct     Info      Sum     Mean      Gmd 
##    69870        0        2    0.121     2948  0.04219  0.08083 
## 
## --------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##              application_id no_of_times_90_dpd_or_worse_in_last_6_months
## nbr.val        6.987000e+04                                 6.987000e+04
## nbr.null       0.000000e+00                                 5.466600e+04
## nbr.na         0.000000e+00                                 0.000000e+00
## min            1.004500e+05                                 0.000000e+00
## max            1.000084e+09                                 3.000000e+00
## range          9.999837e+08                                 3.000000e+00
## sum            3.488095e+13                                 1.739600e+04
## median         4.980487e+08                                 0.000000e+00
## mean           4.992264e+08                                 2.489767e-01
## SE.mean        1.091638e+06                                 1.912985e-03
## CI.mean.0.95   2.139608e+06                                 3.749446e-03
## var            8.326222e+16                                 2.556900e-01
## std.dev        2.885519e+08                                 5.056579e-01
## coef.var       5.779981e-01                                 2.030945e+00
##              no_of_times_60_dpd_or_worse_in_last_6_months
## nbr.val                                      6.987000e+04
## nbr.null                                     5.187100e+04
## nbr.na                                       0.000000e+00
## min                                          0.000000e+00
## max                                          5.000000e+00
## range                                        5.000000e+00
## sum                                          2.736700e+04
## median                                       0.000000e+00
## mean                                         3.916846e-01
## SE.mean                                      2.920142e-03
## CI.mean.0.95                                 5.723472e-03
## var                                          5.957974e-01
## std.dev                                      7.718791e-01
## coef.var                                     1.970665e+00
##              no_of_times_30_dpd_or_worse_in_last_6_months
## nbr.val                                      6.987000e+04
## nbr.null                                     5.009900e+04
## nbr.na                                       0.000000e+00
## min                                          0.000000e+00
## max                                          7.000000e+00
## range                                        7.000000e+00
## sum                                          3.657800e+04
## median                                       0.000000e+00
## mean                                         5.235151e-01
## SE.mean                                      3.786024e-03
## CI.mean.0.95                                 7.420600e-03
## var                                          1.001515e+00
## std.dev                                      1.000757e+00
## coef.var                                     1.911611e+00
##              no_of_times_90_dpd_or_worse_in_last_12_months
## nbr.val                                       6.987000e+04
## nbr.null                                      5.049400e+04
## nbr.na                                        0.000000e+00
## min                                           0.000000e+00
## max                                           5.000000e+00
## range                                         5.000000e+00
## sum                                           2.898500e+04
## median                                        0.000000e+00
## mean                                          4.148418e-01
## SE.mean                                       2.888510e-03
## CI.mean.0.95                                  5.661474e-03
## var                                           5.829597e-01
## std.dev                                       7.635180e-01
## coef.var                                      1.840504e+00
##              no_of_times_60_dpd_or_worse_in_last_12_months
## nbr.val                                       6.987000e+04
## nbr.null                                      4.586900e+04
## nbr.na                                        0.000000e+00
## min                                           0.000000e+00
## max                                           7.000000e+00
## range                                         7.000000e+00
## sum                                           4.216000e+04
## median                                        0.000000e+00
## mean                                          6.034063e-01
## SE.mean                                       3.865470e-03
## CI.mean.0.95                                  7.576314e-03
## var                                           1.043988e+00
## std.dev                                       1.021757e+00
## coef.var                                      1.693315e+00
##              no_of_times_30_dpd_or_worse_in_last_12_months
## nbr.val                                       6.987000e+04
## nbr.null                                      4.485800e+04
## nbr.na                                        0.000000e+00
## min                                           0.000000e+00
## max                                           9.000000e+00
## range                                         9.000000e+00
## sum                                           5.127800e+04
## median                                        0.000000e+00
## mean                                          7.339058e-01
## SE.mean                                       4.703158e-03
## CI.mean.0.95                                  9.218181e-03
## var                                           1.545503e+00
## std.dev                                       1.243183e+00
## coef.var                                      1.693927e+00
##              avgas_cc_utilization_in_last_12_months
## nbr.val                                6.884700e+04
## nbr.null                               2.310000e+02
## nbr.na                                 1.023000e+03
## min                                    0.000000e+00
## max                                    1.130000e+02
## range                                  1.130000e+02
## sum                                    2.014822e+06
## median                                 1.500000e+01
## mean                                   2.926521e+01
## SE.mean                                1.124893e-01
## CI.mean.0.95                           2.204789e-01
## var                                    8.711795e+02
## std.dev                                2.951575e+01
## coef.var                               1.008561e+00
##              no_of_trades_opened_in_last_6_months
## nbr.val                              6.986900e+04
## nbr.null                             1.219400e+04
## nbr.na                               1.000000e+00
## min                                  0.000000e+00
## max                                  1.200000e+01
## range                                1.200000e+01
## sum                                  1.596580e+05
## median                               2.000000e+00
## mean                                 2.285105e+00
## SE.mean                              7.876077e-03
## CI.mean.0.95                         1.543709e-02
## var                                  4.334155e+00
## std.dev                              2.081863e+00
## coef.var                             9.110580e-01
##              no_of_trades_opened_in_last_12_months
## nbr.val                               6.987000e+04
## nbr.null                              4.956000e+03
## nbr.na                                0.000000e+00
## min                                   0.000000e+00
## max                                   2.800000e+01
## range                                 2.800000e+01
## sum                                   4.041940e+05
## median                                4.000000e+00
## mean                                  5.784943e+00
## SE.mean                               1.927649e-02
## CI.mean.0.95                          3.778188e-02
## var                                   2.596251e+01
## std.dev                               5.095342e+00
## coef.var                              8.807937e-01
##              no_of_pl_trades_opened_in_last_6_months
## nbr.val                                 6.987000e+04
## nbr.null                                3.108100e+04
## nbr.na                                  0.000000e+00
## min                                     0.000000e+00
## max                                     6.000000e+00
## range                                   6.000000e+00
## sum                                     8.311500e+04
## median                                  1.000000e+00
## mean                                    1.189566e+00
## SE.mean                                 5.117361e-03
## CI.mean.0.95                            1.003002e-02
## var                                     1.829713e+00
## std.dev                                 1.352669e+00
## coef.var                                1.137111e+00
##              no_of_pl_trades_opened_in_last_12_months
## nbr.val                                  6.987000e+04
## nbr.null                                 2.582500e+04
## nbr.na                                   0.000000e+00
## min                                      0.000000e+00
## max                                      1.200000e+01
## range                                    1.200000e+01
## sum                                      1.651350e+05
## median                                   2.000000e+00
## mean                                     2.363461e+00
## SE.mean                                  9.168974e-03
## CI.mean.0.95                             1.797117e-02
## var                                      5.873977e+00
## std.dev                                  2.423629e+00
## coef.var                                 1.025458e+00
##              no_of_inquiries_in_last_6_months_excluding_home_auto_loans
## nbr.val                                                    6.987000e+04
## nbr.null                                                   2.506900e+04
## nbr.na                                                     0.000000e+00
## min                                                        0.000000e+00
## max                                                        1.000000e+01
## range                                                      1.000000e+01
## sum                                                        1.228300e+05
## median                                                     1.000000e+00
## mean                                                       1.757979e+00
## SE.mean                                                    7.509624e-03
## CI.mean.0.95                                               1.471885e-02
## var                                                        3.940280e+00
## std.dev                                                    1.985014e+00
## coef.var                                                   1.129145e+00
##              no_of_inquiries_in_last_12_months_excluding_home_auto_loans
## nbr.val                                                     6.987000e+04
## nbr.null                                                    2.058100e+04
## nbr.na                                                      0.000000e+00
## min                                                         0.000000e+00
## max                                                         2.000000e+01
## range                                                       2.000000e+01
## sum                                                         2.462940e+05
## median                                                      3.000000e+00
## mean                                                        3.525032e+00
## SE.mean                                                     1.366362e-02
## CI.mean.0.95                                                2.678067e-02
## var                                                         1.304435e+01
## std.dev                                                     3.611696e+00
## coef.var                                                    1.024585e+00
##              presence_of_open_home_loan outstanding_balance total_no_of_trades
## nbr.val                    6.959800e+04        6.959800e+04       6.987000e+04
## nbr.null                   5.152700e+04        8.090000e+02       9.880000e+02
## nbr.na                     2.720000e+02        2.720000e+02       0.000000e+00
## min                        0.000000e+00        0.000000e+00       0.000000e+00
## max                        1.000000e+00        5.218801e+06       4.400000e+01
## range                      1.000000e+00        5.218801e+06       4.400000e+01
## sum                        1.807100e+04        8.722980e+10       5.711660e+05
## median                     0.000000e+00        7.742345e+05       6.000000e+00
## mean                       2.596483e-01        1.253338e+06       8.174696e+00
## SE.mean                    1.661944e-03        4.875269e+03       2.706017e-02
## CI.mean.0.95               3.257408e-03        9.555517e+03       5.303788e-02
## var                        1.922338e-01        1.654222e+12       5.116251e+01
## std.dev                    4.384448e-01        1.286166e+06       7.152798e+00
## coef.var                   1.688610e+00        1.026193e+00       8.749925e-01
##              presence_of_open_auto_loan performance_tag
## nbr.val                    6.987000e+04    6.987000e+04
## nbr.null                   6.394000e+04    6.692200e+04
## nbr.na                     0.000000e+00    0.000000e+00
## min                        0.000000e+00    0.000000e+00
## max                        1.000000e+00    1.000000e+00
## range                      1.000000e+00    1.000000e+00
## sum                        5.930000e+03    2.948000e+03
## median                     0.000000e+00    0.000000e+00
## mean                       8.487190e-02    4.219264e-02
## SE.mean                    1.054340e-03    7.605280e-04
## CI.mean.0.95               2.066504e-03    1.490633e-03
## var                        7.766978e-02    4.041300e-02
## std.dev                    2.786930e-01    2.010299e-01
## coef.var                   3.283689e+00    4.764571e+00&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-7.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-8.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-9.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-10.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-11.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-12.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-13.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-14.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-15.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-16.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-17.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-18.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-19.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-20.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-21.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-22.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-23.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-24.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between no_of_inquiries_in_last_12_months_excluding_home_auto_loans and performance Tag is 0.05602722&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between presence_of_open_home_loan and performance Tag is -0.02547596&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between outstanding_balance and performance Tag is 0.001155206&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between total_no_of_trades and performance Tag is 0.0349171&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between presence_of_open_auto_loan and performance Tag is -0.007971069&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between avgas_cc_utilization_in_last_12_months and performance Tag is 0.08040627&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between no_of_trades_opened_in_last_6_months and performance Tag is 0.05069951&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between no_of_trades_opened_in_last_12_monthss and performance Tag is 0.05921629&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between no_of_pl_trades_opened_in_last_6_months and performance Tag is 0.07211644&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between no_of_pl_trades_opened_in_last_12_months and performance Tag is 0.07780216&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between no_of_inquiries_in_last_6_months_excluding_home_auto_loans and performance Tag is 0.04671557&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between no_of_times_90_dpd_or_worse_in_last_6_months and performance Tag is 0.08814223&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between no_of_times_60_dpd_or_worse_in_last_6_months and performance Tag is 0.09567882&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between no_of_times_30_dpd_or_worse_in_last_6_months and performance Tag is 0.1027773&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between no_of_times_90_dpd_or_worse_in_last_12_months and performance Tag is 0.09772734&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between no_of_times_60_dpd_or_worse_in_last_12_months and performance Tag is 0.09296393&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The Correlation between no_of_times_30_dpd_or_worse_in_last_12_months and performance Tag is 0.1009908&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                                                             application_id
## application_id                                                        1.00
## no_of_times_90_dpd_or_worse_in_last_6_months                          0.00
## no_of_times_60_dpd_or_worse_in_last_6_months                          0.00
## no_of_times_30_dpd_or_worse_in_last_6_months                          0.00
## no_of_times_90_dpd_or_worse_in_last_12_months                         0.00
## no_of_times_60_dpd_or_worse_in_last_12_months                         0.00
## no_of_times_30_dpd_or_worse_in_last_12_months                         0.00
## avgas_cc_utilization_in_last_12_months                                0.00
## no_of_trades_opened_in_last_6_months                                  0.00
## no_of_trades_opened_in_last_12_months                                 0.00
## no_of_pl_trades_opened_in_last_6_months                               0.00
## no_of_pl_trades_opened_in_last_12_months                              0.00
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans            0.00
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans           0.00
## presence_of_open_home_loan                                            0.00
## outstanding_balance                                                   0.00
## total_no_of_trades                                                    0.00
## presence_of_open_auto_loan                                            0.01
## performance_tag                                                       0.00
##                                                             no_of_times_90_dpd_or_worse_in_last_6_months
## application_id                                                                                      0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                                                        1.00
## no_of_times_60_dpd_or_worse_in_last_6_months                                                        0.89
## no_of_times_30_dpd_or_worse_in_last_6_months                                                        0.84
## no_of_times_90_dpd_or_worse_in_last_12_months                                                       0.89
## no_of_times_60_dpd_or_worse_in_last_12_months                                                       0.82
## no_of_times_30_dpd_or_worse_in_last_12_months                                                       0.80
## avgas_cc_utilization_in_last_12_months                                                              0.36
## no_of_trades_opened_in_last_6_months                                                                0.14
## no_of_trades_opened_in_last_12_months                                                               0.17
## no_of_pl_trades_opened_in_last_6_months                                                             0.25
## no_of_pl_trades_opened_in_last_12_months                                                            0.27
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                                          0.14
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                                         0.15
## presence_of_open_home_loan                                                                         -0.11
## outstanding_balance                                                                                -0.02
## total_no_of_trades                                                                                  0.03
## presence_of_open_auto_loan                                                                         -0.03
## performance_tag                                                                                     0.09
##                                                             no_of_times_60_dpd_or_worse_in_last_6_months
## application_id                                                                                      0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                                                        0.89
## no_of_times_60_dpd_or_worse_in_last_6_months                                                        1.00
## no_of_times_30_dpd_or_worse_in_last_6_months                                                        0.95
## no_of_times_90_dpd_or_worse_in_last_12_months                                                       0.84
## no_of_times_60_dpd_or_worse_in_last_12_months                                                       0.92
## no_of_times_30_dpd_or_worse_in_last_12_months                                                       0.90
## avgas_cc_utilization_in_last_12_months                                                              0.35
## no_of_trades_opened_in_last_6_months                                                                0.15
## no_of_trades_opened_in_last_12_months                                                               0.19
## no_of_pl_trades_opened_in_last_6_months                                                             0.27
## no_of_pl_trades_opened_in_last_12_months                                                            0.30
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                                          0.15
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                                         0.17
## presence_of_open_home_loan                                                                         -0.12
## outstanding_balance                                                                                -0.02
## total_no_of_trades                                                                                  0.04
## presence_of_open_auto_loan                                                                         -0.03
## performance_tag                                                                                     0.10
##                                                             no_of_times_30_dpd_or_worse_in_last_6_months
## application_id                                                                                      0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                                                        0.84
## no_of_times_60_dpd_or_worse_in_last_6_months                                                        0.95
## no_of_times_30_dpd_or_worse_in_last_6_months                                                        1.00
## no_of_times_90_dpd_or_worse_in_last_12_months                                                       0.83
## no_of_times_60_dpd_or_worse_in_last_12_months                                                       0.90
## no_of_times_30_dpd_or_worse_in_last_12_months                                                       0.95
## avgas_cc_utilization_in_last_12_months                                                              0.35
## no_of_trades_opened_in_last_6_months                                                                0.16
## no_of_trades_opened_in_last_12_months                                                               0.20
## no_of_pl_trades_opened_in_last_6_months                                                             0.28
## no_of_pl_trades_opened_in_last_12_months                                                            0.31
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                                          0.16
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                                         0.18
## presence_of_open_home_loan                                                                         -0.12
## outstanding_balance                                                                                -0.02
## total_no_of_trades                                                                                  0.04
## presence_of_open_auto_loan                                                                         -0.03
## performance_tag                                                                                     0.10
##                                                             no_of_times_90_dpd_or_worse_in_last_12_months
## application_id                                                                                       0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                                                         0.89
## no_of_times_60_dpd_or_worse_in_last_6_months                                                         0.84
## no_of_times_30_dpd_or_worse_in_last_6_months                                                         0.83
## no_of_times_90_dpd_or_worse_in_last_12_months                                                        1.00
## no_of_times_60_dpd_or_worse_in_last_12_months                                                        0.81
## no_of_times_30_dpd_or_worse_in_last_12_months                                                        0.80
## avgas_cc_utilization_in_last_12_months                                                               0.38
## no_of_trades_opened_in_last_6_months                                                                 0.15
## no_of_trades_opened_in_last_12_months                                                                0.19
## no_of_pl_trades_opened_in_last_6_months                                                              0.28
## no_of_pl_trades_opened_in_last_12_months                                                             0.31
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                                           0.16
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                                          0.18
## presence_of_open_home_loan                                                                          -0.13
## outstanding_balance                                                                                 -0.02
## total_no_of_trades                                                                                   0.04
## presence_of_open_auto_loan                                                                          -0.03
## performance_tag                                                                                      0.10
##                                                             no_of_times_60_dpd_or_worse_in_last_12_months
## application_id                                                                                       0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                                                         0.82
## no_of_times_60_dpd_or_worse_in_last_6_months                                                         0.92
## no_of_times_30_dpd_or_worse_in_last_6_months                                                         0.90
## no_of_times_90_dpd_or_worse_in_last_12_months                                                        0.81
## no_of_times_60_dpd_or_worse_in_last_12_months                                                        1.00
## no_of_times_30_dpd_or_worse_in_last_12_months                                                        0.90
## avgas_cc_utilization_in_last_12_months                                                               0.34
## no_of_trades_opened_in_last_6_months                                                                 0.13
## no_of_trades_opened_in_last_12_months                                                                0.16
## no_of_pl_trades_opened_in_last_6_months                                                              0.25
## no_of_pl_trades_opened_in_last_12_months                                                             0.28
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                                           0.13
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                                          0.14
## presence_of_open_home_loan                                                                          -0.11
## outstanding_balance                                                                                 -0.02
## total_no_of_trades                                                                                   0.01
## presence_of_open_auto_loan                                                                          -0.02
## performance_tag                                                                                      0.09
##                                                             no_of_times_30_dpd_or_worse_in_last_12_months
## application_id                                                                                       0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                                                         0.80
## no_of_times_60_dpd_or_worse_in_last_6_months                                                         0.90
## no_of_times_30_dpd_or_worse_in_last_6_months                                                         0.95
## no_of_times_90_dpd_or_worse_in_last_12_months                                                        0.80
## no_of_times_60_dpd_or_worse_in_last_12_months                                                        0.90
## no_of_times_30_dpd_or_worse_in_last_12_months                                                        1.00
## avgas_cc_utilization_in_last_12_months                                                               0.34
## no_of_trades_opened_in_last_6_months                                                                 0.14
## no_of_trades_opened_in_last_12_months                                                                0.18
## no_of_pl_trades_opened_in_last_6_months                                                              0.26
## no_of_pl_trades_opened_in_last_12_months                                                             0.29
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                                           0.14
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                                          0.16
## presence_of_open_home_loan                                                                          -0.11
## outstanding_balance                                                                                 -0.02
## total_no_of_trades                                                                                   0.01
## presence_of_open_auto_loan                                                                          -0.03
## performance_tag                                                                                      0.10
##                                                             avgas_cc_utilization_in_last_12_months
## application_id                                                                                0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                                                  0.36
## no_of_times_60_dpd_or_worse_in_last_6_months                                                  0.35
## no_of_times_30_dpd_or_worse_in_last_6_months                                                  0.35
## no_of_times_90_dpd_or_worse_in_last_12_months                                                 0.38
## no_of_times_60_dpd_or_worse_in_last_12_months                                                 0.34
## no_of_times_30_dpd_or_worse_in_last_12_months                                                 0.34
## avgas_cc_utilization_in_last_12_months                                                        1.00
## no_of_trades_opened_in_last_6_months                                                          0.09
## no_of_trades_opened_in_last_12_months                                                         0.13
## no_of_pl_trades_opened_in_last_6_months                                                       0.24
## no_of_pl_trades_opened_in_last_12_months                                                      0.27
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                                    0.09
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                                   0.10
## presence_of_open_home_loan                                                                   -0.13
## outstanding_balance                                                                          -0.03
## total_no_of_trades                                                                           -0.01
## presence_of_open_auto_loan                                                                   -0.04
## performance_tag                                                                               0.08
##                                                             no_of_trades_opened_in_last_6_months
## application_id                                                                              0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                                                0.14
## no_of_times_60_dpd_or_worse_in_last_6_months                                                0.15
## no_of_times_30_dpd_or_worse_in_last_6_months                                                0.16
## no_of_times_90_dpd_or_worse_in_last_12_months                                               0.15
## no_of_times_60_dpd_or_worse_in_last_12_months                                               0.13
## no_of_times_30_dpd_or_worse_in_last_12_months                                               0.14
## avgas_cc_utilization_in_last_12_months                                                      0.09
## no_of_trades_opened_in_last_6_months                                                        1.00
## no_of_trades_opened_in_last_12_months                                                       0.94
## no_of_pl_trades_opened_in_last_6_months                                                     0.88
## no_of_pl_trades_opened_in_last_12_months                                                    0.83
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                                  0.67
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                                 0.73
## presence_of_open_home_loan                                                                 -0.12
## outstanding_balance                                                                         0.17
## total_no_of_trades                                                                          0.89
## presence_of_open_auto_loan                                                                 -0.04
## performance_tag                                                                             0.05
##                                                             no_of_trades_opened_in_last_12_months
## application_id                                                                               0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                                                 0.17
## no_of_times_60_dpd_or_worse_in_last_6_months                                                 0.19
## no_of_times_30_dpd_or_worse_in_last_6_months                                                 0.20
## no_of_times_90_dpd_or_worse_in_last_12_months                                                0.19
## no_of_times_60_dpd_or_worse_in_last_12_months                                                0.16
## no_of_times_30_dpd_or_worse_in_last_12_months                                                0.18
## avgas_cc_utilization_in_last_12_months                                                       0.13
## no_of_trades_opened_in_last_6_months                                                         0.94
## no_of_trades_opened_in_last_12_months                                                        1.00
## no_of_pl_trades_opened_in_last_6_months                                                      0.89
## no_of_pl_trades_opened_in_last_12_months                                                     0.93
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                                   0.72
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                                  0.79
## presence_of_open_home_loan                                                                  -0.14
## outstanding_balance                                                                          0.19
## total_no_of_trades                                                                           0.94
## presence_of_open_auto_loan                                                                  -0.05
## performance_tag                                                                              0.06
##                                                             no_of_pl_trades_opened_in_last_6_months
## application_id                                                                                 0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                                                   0.25
## no_of_times_60_dpd_or_worse_in_last_6_months                                                   0.27
## no_of_times_30_dpd_or_worse_in_last_6_months                                                   0.28
## no_of_times_90_dpd_or_worse_in_last_12_months                                                  0.28
## no_of_times_60_dpd_or_worse_in_last_12_months                                                  0.25
## no_of_times_30_dpd_or_worse_in_last_12_months                                                  0.26
## avgas_cc_utilization_in_last_12_months                                                         0.24
## no_of_trades_opened_in_last_6_months                                                           0.88
## no_of_trades_opened_in_last_12_months                                                          0.89
## no_of_pl_trades_opened_in_last_6_months                                                        1.00
## no_of_pl_trades_opened_in_last_12_months                                                       0.90
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                                     0.60
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                                    0.65
## presence_of_open_home_loan                                                                    -0.14
## outstanding_balance                                                                            0.17
## total_no_of_trades                                                                             0.79
## presence_of_open_auto_loan                                                                    -0.05
## performance_tag                                                                                0.07
##                                                             no_of_pl_trades_opened_in_last_12_months
## application_id                                                                                  0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                                                    0.27
## no_of_times_60_dpd_or_worse_in_last_6_months                                                    0.30
## no_of_times_30_dpd_or_worse_in_last_6_months                                                    0.31
## no_of_times_90_dpd_or_worse_in_last_12_months                                                   0.31
## no_of_times_60_dpd_or_worse_in_last_12_months                                                   0.28
## no_of_times_30_dpd_or_worse_in_last_12_months                                                   0.29
## avgas_cc_utilization_in_last_12_months                                                          0.27
## no_of_trades_opened_in_last_6_months                                                            0.83
## no_of_trades_opened_in_last_12_months                                                           0.93
## no_of_pl_trades_opened_in_last_6_months                                                         0.90
## no_of_pl_trades_opened_in_last_12_months                                                        1.00
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                                      0.66
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                                     0.73
## presence_of_open_home_loan                                                                     -0.16
## outstanding_balance                                                                             0.20
## total_no_of_trades                                                                              0.83
## presence_of_open_auto_loan                                                                     -0.05
## performance_tag                                                                                 0.08
##                                                             no_of_inquiries_in_last_6_months_excluding_home_auto_loans
## application_id                                                                                                    0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                                                                      0.14
## no_of_times_60_dpd_or_worse_in_last_6_months                                                                      0.15
## no_of_times_30_dpd_or_worse_in_last_6_months                                                                      0.16
## no_of_times_90_dpd_or_worse_in_last_12_months                                                                     0.16
## no_of_times_60_dpd_or_worse_in_last_12_months                                                                     0.13
## no_of_times_30_dpd_or_worse_in_last_12_months                                                                     0.14
## avgas_cc_utilization_in_last_12_months                                                                            0.09
## no_of_trades_opened_in_last_6_months                                                                              0.67
## no_of_trades_opened_in_last_12_months                                                                             0.72
## no_of_pl_trades_opened_in_last_6_months                                                                           0.60
## no_of_pl_trades_opened_in_last_12_months                                                                          0.66
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                                                        1.00
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                                                       0.91
## presence_of_open_home_loan                                                                                       -0.12
## outstanding_balance                                                                                               0.11
## total_no_of_trades                                                                                                0.71
## presence_of_open_auto_loan                                                                                       -0.04
## performance_tag                                                                                                   0.05
##                                                             no_of_inquiries_in_last_12_months_excluding_home_auto_loans
## application_id                                                                                                     0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                                                                       0.15
## no_of_times_60_dpd_or_worse_in_last_6_months                                                                       0.17
## no_of_times_30_dpd_or_worse_in_last_6_months                                                                       0.18
## no_of_times_90_dpd_or_worse_in_last_12_months                                                                      0.18
## no_of_times_60_dpd_or_worse_in_last_12_months                                                                      0.14
## no_of_times_30_dpd_or_worse_in_last_12_months                                                                      0.16
## avgas_cc_utilization_in_last_12_months                                                                             0.10
## no_of_trades_opened_in_last_6_months                                                                               0.73
## no_of_trades_opened_in_last_12_months                                                                              0.79
## no_of_pl_trades_opened_in_last_6_months                                                                            0.65
## no_of_pl_trades_opened_in_last_12_months                                                                           0.73
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                                                         0.91
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                                                        1.00
## presence_of_open_home_loan                                                                                        -0.13
## outstanding_balance                                                                                                0.12
## total_no_of_trades                                                                                                 0.78
## presence_of_open_auto_loan                                                                                        -0.05
## performance_tag                                                                                                    0.06
##                                                             presence_of_open_home_loan
## application_id                                                                    0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                                     -0.11
## no_of_times_60_dpd_or_worse_in_last_6_months                                     -0.12
## no_of_times_30_dpd_or_worse_in_last_6_months                                     -0.12
## no_of_times_90_dpd_or_worse_in_last_12_months                                    -0.13
## no_of_times_60_dpd_or_worse_in_last_12_months                                    -0.11
## no_of_times_30_dpd_or_worse_in_last_12_months                                    -0.11
## avgas_cc_utilization_in_last_12_months                                           -0.13
## no_of_trades_opened_in_last_6_months                                             -0.12
## no_of_trades_opened_in_last_12_months                                            -0.14
## no_of_pl_trades_opened_in_last_6_months                                          -0.14
## no_of_pl_trades_opened_in_last_12_months                                         -0.16
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                       -0.12
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                      -0.13
## presence_of_open_home_loan                                                        1.00
## outstanding_balance                                                               0.94
## total_no_of_trades                                                               -0.10
## presence_of_open_auto_loan                                                        0.02
## performance_tag                                                                  -0.03
##                                                             outstanding_balance
## application_id                                                             0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                              -0.02
## no_of_times_60_dpd_or_worse_in_last_6_months                              -0.02
## no_of_times_30_dpd_or_worse_in_last_6_months                              -0.02
## no_of_times_90_dpd_or_worse_in_last_12_months                             -0.02
## no_of_times_60_dpd_or_worse_in_last_12_months                             -0.02
## no_of_times_30_dpd_or_worse_in_last_12_months                             -0.02
## avgas_cc_utilization_in_last_12_months                                    -0.03
## no_of_trades_opened_in_last_6_months                                       0.17
## no_of_trades_opened_in_last_12_months                                      0.19
## no_of_pl_trades_opened_in_last_6_months                                    0.17
## no_of_pl_trades_opened_in_last_12_months                                   0.20
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                 0.11
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                0.12
## presence_of_open_home_loan                                                 0.94
## outstanding_balance                                                        1.00
## total_no_of_trades                                                         0.19
## presence_of_open_auto_loan                                                 0.05
## performance_tag                                                            0.00
##                                                             total_no_of_trades
## application_id                                                            0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                              0.03
## no_of_times_60_dpd_or_worse_in_last_6_months                              0.04
## no_of_times_30_dpd_or_worse_in_last_6_months                              0.04
## no_of_times_90_dpd_or_worse_in_last_12_months                             0.04
## no_of_times_60_dpd_or_worse_in_last_12_months                             0.01
## no_of_times_30_dpd_or_worse_in_last_12_months                             0.01
## avgas_cc_utilization_in_last_12_months                                   -0.01
## no_of_trades_opened_in_last_6_months                                      0.89
## no_of_trades_opened_in_last_12_months                                     0.94
## no_of_pl_trades_opened_in_last_6_months                                   0.79
## no_of_pl_trades_opened_in_last_12_months                                  0.83
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                0.71
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans               0.78
## presence_of_open_home_loan                                               -0.10
## outstanding_balance                                                       0.19
## total_no_of_trades                                                        1.00
## presence_of_open_auto_loan                                               -0.04
## performance_tag                                                           0.04
##                                                             presence_of_open_auto_loan
## application_id                                                                    0.01
## no_of_times_90_dpd_or_worse_in_last_6_months                                     -0.03
## no_of_times_60_dpd_or_worse_in_last_6_months                                     -0.03
## no_of_times_30_dpd_or_worse_in_last_6_months                                     -0.03
## no_of_times_90_dpd_or_worse_in_last_12_months                                    -0.03
## no_of_times_60_dpd_or_worse_in_last_12_months                                    -0.02
## no_of_times_30_dpd_or_worse_in_last_12_months                                    -0.03
## avgas_cc_utilization_in_last_12_months                                           -0.04
## no_of_trades_opened_in_last_6_months                                             -0.04
## no_of_trades_opened_in_last_12_months                                            -0.05
## no_of_pl_trades_opened_in_last_6_months                                          -0.05
## no_of_pl_trades_opened_in_last_12_months                                         -0.05
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans                       -0.04
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans                      -0.05
## presence_of_open_home_loan                                                        0.02
## outstanding_balance                                                               0.05
## total_no_of_trades                                                               -0.04
## presence_of_open_auto_loan                                                        1.00
## performance_tag                                                                  -0.01
##                                                             performance_tag
## application_id                                                         0.00
## no_of_times_90_dpd_or_worse_in_last_6_months                           0.09
## no_of_times_60_dpd_or_worse_in_last_6_months                           0.10
## no_of_times_30_dpd_or_worse_in_last_6_months                           0.10
## no_of_times_90_dpd_or_worse_in_last_12_months                          0.10
## no_of_times_60_dpd_or_worse_in_last_12_months                          0.09
## no_of_times_30_dpd_or_worse_in_last_12_months                          0.10
## avgas_cc_utilization_in_last_12_months                                 0.08
## no_of_trades_opened_in_last_6_months                                   0.05
## no_of_trades_opened_in_last_12_months                                  0.06
## no_of_pl_trades_opened_in_last_6_months                                0.07
## no_of_pl_trades_opened_in_last_12_months                               0.08
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans             0.05
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans            0.06
## presence_of_open_home_loan                                            -0.03
## outstanding_balance                                                    0.00
## total_no_of_trades                                                     0.04
## presence_of_open_auto_loan                                            -0.01
## performance_tag                                                        1.00&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-2-25.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## &amp;quot;C:/Program Files/RStudio/bin/pandoc/pandoc&amp;quot; +RTS -K512m -RTS &amp;quot;C:/Users/noura/Documents/Nour/content/post/2021-08-02-project/report.knit.md&amp;quot; --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash --output pandocfa4365b4ab4.html --lua-filter &amp;quot;C:\Users\noura\Documents\R\win-library\4.0\rmarkdown\rmarkdown\lua\pagebreak.lua&amp;quot; --lua-filter &amp;quot;C:\Users\noura\Documents\R\win-library\4.0\rmarkdown\rmarkdown\lua\latex-div.lua&amp;quot; --self-contained --variable bs3=TRUE --standalone --section-divs --table-of-contents --toc-depth 6 --template &amp;quot;C:\Users\noura\Documents\R\win-library\4.0\rmarkdown\rmd\h\default.html&amp;quot; --no-highlight --variable highlightjs=1 --variable theme=yeti --include-in-header &amp;quot;C:\Users\Public\Documents\Wondershare\CreatorTemp\RtmpQx62rR\rmarkdown-strfa41a2d1371.html&amp;quot; --mathjax --variable &amp;quot;mathjax-url:https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;quot;C:/Program Files/RStudio/bin/pandoc/pandoc&amp;quot; +RTS -K512m -RTS &amp;quot;C:/Users/noura/Documents/Nour/content/post/2021-08-02-project/report.knit.md&amp;quot; --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash --output pandocfa474d44001.html --lua-filter &amp;quot;C:\Users\noura\Documents\R\win-library\4.0\rmarkdown\rmarkdown\lua\pagebreak.lua&amp;quot; --lua-filter &amp;quot;C:\Users\noura\Documents\R\win-library\4.0\rmarkdown\rmarkdown\lua\latex-div.lua&amp;quot; --self-contained --variable bs3=TRUE --standalone --section-divs --table-of-contents --toc-depth 6 --template &amp;quot;C:\Users\noura\Documents\R\win-library\4.0\rmarkdown\rmd\h\default.html&amp;quot; --no-highlight --variable highlightjs=1 --variable theme=yeti --include-in-header &amp;quot;C:\Users\Public\Documents\Wondershare\CreatorTemp\RtmpQx62rR\rmarkdown-strfa490c38c9.html&amp;quot; --mathjax --variable &amp;quot;mathjax-url:https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;splitting-the-data-to-training-and-testing-splits&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Splitting the data to training and testing splits&lt;/h2&gt;
&lt;p&gt;In this step we are going to split the data, so that 3/4 of the data would be assigned for training and the remaining 1/4 of the data would be assigned for testing.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;information-vlaue-of-the-predictors&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Information Vlaue of the predictors&lt;/h2&gt;
&lt;p&gt;Information value is used to select important predictors in the predictive model, So for the first model that used only the Demographic data we can see that the predictors with high information value (greater than 0.02) are no_of_months_in_current_residence,income, age, no_of_months_in_current_company, and for the second model the predictors with the high information value are all the predictors except application_id,gender_profession, marital_status_at_the_time_of_application, education, presence_of_open_auto_loan, type_of_residence and no_of_dependents.&lt;/p&gt;
&lt;p&gt;Based on the table shown below, any predictors whose information value is less than 0.02 is considered not useful and accordingly will be discarded and not used in our predictive models.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;table.png&#34; width=&#34;98%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;From the shown table of the information values of the first model predictors we can see that out of the 11 predictors the first 4 predictors only will be used as their information value is greater than 0.02.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;iv_d.png&#34; width=&#34;98%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;From the shown table of the information values of the second model predictors we can see that out of the 28 predictors the first 20 predictors only will be used as their information value is greater than 0.02.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;iv_b.png&#34; width=&#34;98%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;creating-bins-for-each-predictor&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Creating bins for each predictor&lt;/h2&gt;
&lt;p&gt;In this part we will create number of bins for each predictor in the twos models.The bins for each predictor is created based on similarity of dependent variable distribution.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## [INFO] creating woe binning ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [INFO] creating woe binning ...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;weight-of-evidence-tranformation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Weight of evidence tranformation&lt;/h2&gt;
&lt;p&gt;In this part we are going to calculate the weight of evidence (WOE) of the continuous predictors that helps to transform a continuous independent variable into a set of bins. Woe tells the predictive power of an independent variable in relation to the dependent variable.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## [INFO] converting into woe values ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [INFO] converting into woe values ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [INFO] converting into woe values ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [INFO] converting into woe values ...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;check-correct-binning-with-weight-of-evidence-woe&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Check correct binning with weight of evidence (WOE)&lt;/h2&gt;
&lt;p&gt;To check that the binning with weight of evidence is correct the binning need to satisfy two criteria:&lt;/p&gt;
&lt;p&gt;1.The WOE should be monotonic.
2.The slope resulted from a logistic regression with one independent variable vs the dependent variable must be equal to one or the intercept must be ln(% of non-events / % of events) .&lt;/p&gt;
&lt;p&gt;The graphs below show the binning and WOE transformation associated with all the predictors in the two models, From the shown graphs, we can see that the Woe transformation of all the predictors in the two models satisfied the first criteria that all are monotonic.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_months_in_current_residence&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_months_in_current_company&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $age&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $income&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_times_90_dpd_or_worse_in_last_6_months&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_times_60_dpd_or_worse_in_last_6_months&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-6.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_times_30_dpd_or_worse_in_last_6_months&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-7.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_times_90_dpd_or_worse_in_last_12_months&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-8.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_times_60_dpd_or_worse_in_last_12_months&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-9.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_times_30_dpd_or_worse_in_last_12_months&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-10.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $avgas_cc_utilization_in_last_12_months&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-11.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_trades_opened_in_last_6_months&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-12.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_trades_opened_in_last_12_months&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-13.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_pl_trades_opened_in_last_6_months&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-14.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_pl_trades_opened_in_last_12_months&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-15.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_inquiries_in_last_6_months_excluding_home_auto_loans&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-16.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_inquiries_in_last_12_months_excluding_home_auto_loans&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-17.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $total_no_of_trades&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-18.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_months_in_current_residence&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-19.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $no_of_months_in_current_company&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-20.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $income&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-21.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $age&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-22.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## $outstanding_balance&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-11-23.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The logistic regressions resulted from each predictor in the two models Vs the dependent variable show that the slope associated with each regression is one as required.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ no_of_months_in_current_residence_woe, 
##     family = binomial, data = woe_demogs_training_data)
## 
## Coefficients:
##                           (Intercept)  no_of_months_in_current_residence_woe  
##                                -3.123                                  1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18310 
## Residual Deviance: 18100     AIC: 18110&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ no_of_months_in_current_residence_woe, 
##     family = binomial, data = woe_demogs_training_data)
## 
## Coefficients:
##                           (Intercept)  no_of_months_in_current_residence_woe  
##                                -3.123                                  1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18310 
## Residual Deviance: 18100     AIC: 18110&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ age_woe, family = binomial, data = woe_demogs_training_data)
## 
## Coefficients:
## (Intercept)      age_woe  
##      -3.123        1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18310 
## Residual Deviance: 18300     AIC: 18300&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ income_woe, family = binomial, 
##     data = woe_demogs_training_data)
## 
## Coefficients:
## (Intercept)   income_woe  
##      -3.123        1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18310 
## Residual Deviance: 18240     AIC: 18240&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ no_of_times_90_dpd_or_worse_in_last_6_months_woe, 
##     family = binomial, data = woe_both_training_data)
## 
## Coefficients:
##                                      (Intercept)  
##                                           -3.117  
## no_of_times_90_dpd_or_worse_in_last_6_months_woe  
##                                            1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18390 
## Residual Deviance: 18020     AIC: 18030&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ no_of_times_60_dpd_or_worse_in_last_6_months_woe, 
##     family = binomial, data = woe_both_training_data)
## 
## Coefficients:
##                                      (Intercept)  
##                                           -3.117  
## no_of_times_60_dpd_or_worse_in_last_6_months_woe  
##                                            1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18390 
## Residual Deviance: 17930     AIC: 17930&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ no_of_times_30_dpd_or_worse_in_last_6_months_woe, 
##     family = binomial, data = woe_both_training_data)
## 
## Coefficients:
##                                      (Intercept)  
##                                           -3.117  
## no_of_times_30_dpd_or_worse_in_last_6_months_woe  
##                                            1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18390 
## Residual Deviance: 17860     AIC: 17860&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ no_of_times_90_dpd_or_worse_in_last_12_months_woe, 
##     family = binomial, data = woe_both_training_data)
## 
## Coefficients:
##                                       (Intercept)  
##                                            -3.117  
## no_of_times_90_dpd_or_worse_in_last_12_months_woe  
##                                             1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18390 
## Residual Deviance: 17900     AIC: 17910&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ no_of_times_60_dpd_or_worse_in_last_12_months_woe, 
##     family = binomial, data = woe_both_training_data)
## 
## Coefficients:
##                                       (Intercept)  
##                                            -3.117  
## no_of_times_60_dpd_or_worse_in_last_12_months_woe  
##                                             1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18390 
## Residual Deviance: 17970     AIC: 17980&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ no_of_times_30_dpd_or_worse_in_last_12_months_woe, 
##     family = binomial, data = woe_both_training_data)
## 
## Coefficients:
##                                       (Intercept)  
##                                            -3.117  
## no_of_times_30_dpd_or_worse_in_last_12_months_woe  
##                                             1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18390 
## Residual Deviance: 17920     AIC: 17920&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ avgas_cc_utilization_in_last_12_months_woe, 
##     family = binomial, data = woe_both_training_data)
## 
## Coefficients:
##                                (Intercept)  
##                                     -3.117  
## avgas_cc_utilization_in_last_12_months_woe  
##                                      1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18390 
## Residual Deviance: 17760     AIC: 17760&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ no_of_trades_opened_in_last_6_months_woe, 
##     family = binomial, data = woe_both_training_data)
## 
## Coefficients:
##                              (Intercept)  
##                                   -3.117  
## no_of_trades_opened_in_last_6_months_woe  
##                                    1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18390 
## Residual Deviance: 18010     AIC: 18020&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ no_of_trades_opened_in_last_12_months_woe, 
##     family = binomial, data = woe_both_training_data)
## 
## Coefficients:
##                               (Intercept)  
##                                    -3.117  
## no_of_trades_opened_in_last_12_months_woe  
##                                     1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18390 
## Residual Deviance: 17850     AIC: 17850&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ no_of_pl_trades_opened_in_last_6_months_woe, 
##     family = binomial, data = woe_both_training_data)
## 
## Coefficients:
##                                 (Intercept)  
##                                      -3.117  
## no_of_pl_trades_opened_in_last_6_months_woe  
##                                       1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18390 
## Residual Deviance: 17950     AIC: 17950&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ no_of_pl_trades_opened_in_last_12_months_woe, 
##     family = binomial, data = woe_both_training_data)
## 
## Coefficients:
##                                  (Intercept)  
##                                       -3.117  
## no_of_pl_trades_opened_in_last_12_months_woe  
##                                        1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18390 
## Residual Deviance: 17810     AIC: 17820&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ no_of_inquiries_in_last_6_months_excluding_home_auto_loans_woe, 
##     family = binomial, data = woe_both_training_data)
## 
## Coefficients:
##                                                    (Intercept)  
##                                                         -3.117  
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans_woe  
##                                                          1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18390 
## Residual Deviance: 18000     AIC: 18010&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ no_of_inquiries_in_last_12_months_excluding_home_auto_loans_woe, 
##     family = binomial, data = woe_both_training_data)
## 
## Coefficients:
##                                                     (Intercept)  
##                                                          -3.117  
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans_woe  
##                                                           1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18390 
## Residual Deviance: 17880     AIC: 17880&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ total_no_of_trades_woe, family = binomial, 
##     data = woe_both_training_data)
## 
## Coefficients:
##            (Intercept)  total_no_of_trades_woe  
##                 -3.117                   1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18390 
## Residual Deviance: 17900     AIC: 17900&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:  glm(formula = performance_tag ~ no_of_months_in_current_residence_woe, 
##     family = binomial, data = woe_both_training_data)
## 
## Coefficients:
##                           (Intercept)  no_of_months_in_current_residence_woe  
##                                -3.117                                  1.000  
## 
## Degrees of Freedom: 52401 Total (i.e. Null);  52400 Residual
## Null Deviance:       18390 
## Residual Deviance: 18210     AIC: 18220&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data-balance&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data Balance&lt;/h2&gt;
&lt;p&gt;As an important step before using the data in predictive models is to check the data balance, where the imbalanced data refers to the number of observations in the training dataset for each class is not balanced. If the data is imbalance it would result in poor performance for the predictive models because of the severely skewed class distribution.&lt;/p&gt;
&lt;p&gt;The training splits for the both the demographic and combined data are of 52402 observations out of which 50193 observations for 0 performance_tag class and 2209 observations for 1 performance_tag class.so the percentage of the customers with performance tag equal to one is around 4.2 % in our training data sets for both the Demographic and combined dataframe, which is considered very small portion and resulted in imbalanced data sets.&lt;/p&gt;
&lt;p&gt;performance_tag n
&lt;fct&gt; &lt;int&gt;
0 50193
1 2209&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;                       ## Checking the balance of the data with respect to the performance_tag 

# first the demogs training data data

count_demogs_data_train&amp;lt;- training_data_d%&amp;gt;% count(performance_tag)
bad_percent_demogs_train&amp;lt;-count_demogs_data_train$n[2]*100/(count_demogs_data_train$n[1]+count_demogs_data_train$n[2])

##################################################################################################################################

# Third for the combined training data 
count_both_data_train&amp;lt;- training_data_both%&amp;gt;% count(performance_tag)
bad_percent_both_train&amp;lt;-count_both_data_train$n[2]*100/(count_both_data_train$n[1]+count_both_data_train$n[2])&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;balance-the-imbalanced-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Balance the imbalanced data&lt;/h2&gt;
&lt;p&gt;To balance the imbalanced data we need to artificially create 1 performace_tag observations. Smote function is used to handles unbalanced classification problems using the SMOTE method. Namely, it can generate a new “SMOTEd” data set that addresses the class unbalance problem.&lt;/p&gt;
&lt;p&gt;The resulted balanced data is as shown:&lt;/p&gt;
&lt;p&gt;0 1
4418 4418&lt;/p&gt;
&lt;p&gt;0 1
4444 4444&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;                                                  ## Handle the unbalanced data

 set.seed(1000)

train_data_balanced_over &amp;lt;- smote(performance_tag ~ ., woe_demogs_training_data, perc.over = 1,perc.under=2)
table(train_data_balanced_over$performance_tag)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##    0    1 
## 4418 4418&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt; set.seed(2000)

train_data_balanced_over_both &amp;lt;- smote(performance_tag ~ ., woe_both_training_data, perc.over =1 ,perc.under=2)
table(train_data_balanced_over_both$performance_tag)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##    0    1 
## 4444 4444&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;logistic-regression-model&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Logistic Regression Model&lt;/h3&gt;
&lt;p&gt;Two logistic regression models are created.First logistic regression predictive model is created that used only the demographic balanced WOE transformed training data split for training the model and the second logistic regression predictive model is created that used combined balanced WOE transformed training data split for training the model.&lt;/p&gt;
&lt;p&gt;1st model (using only the demographic data) gave the following results on the testing data&lt;/p&gt;
&lt;p&gt;Accuracy: 0.569
Sensitivity: 0.569
Specificity: 0.569&lt;/p&gt;
&lt;p&gt;2nd model (using the combined data) gave the following results on the testing data&lt;/p&gt;
&lt;p&gt;Accuracy: 0.625
Sensitivity: 0.626
Specificity: 0.606&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;                       ## Logistic Regression Model based on the demographic data only


mdl_demogs &amp;lt;- glm(performance_tag ~ ., data = train_data_balanced_over, family = &amp;quot;binomial&amp;quot;)

summary(mdl_demogs)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## glm(formula = performance_tag ~ ., family = &amp;quot;binomial&amp;quot;, data = train_data_balanced_over)
## 
## Deviance Residuals: 
##      Min        1Q    Median        3Q       Max  
## -1.70623  -1.11655  -0.03809   1.14711   1.61500  
## 
## Coefficients:
##                                       Estimate Std. Error z value Pr(&amp;gt;|z|)    
## (Intercept)                           0.002424   0.021718   0.112 0.911139    
## no_of_months_in_current_residence_woe 0.925603   0.070452  13.138  &amp;lt; 2e-16 ***
## no_of_months_in_current_company_woe   0.878699   0.116891   7.517 5.59e-14 ***
## income_woe                            0.905844   0.115906   7.815 5.48e-15 ***
## age_woe                               0.962500   0.275344   3.496 0.000473 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## (Dispersion parameter for binomial family taken to be 1)
## 
##     Null deviance: 12249  on 8835  degrees of freedom
## Residual deviance: 11891  on 8831  degrees of freedom
## AIC: 11901
## 
## Number of Fisher Scoring iterations: 4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vif(mdl_demogs)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## no_of_months_in_current_residence_woe   no_of_months_in_current_company_woe 
##                              1.017258                              1.003238 
##                            income_woe                               age_woe 
##                              1.017341                              1.002854&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Predict on the testing data
pred_demogs&amp;lt;- woe_demogs_testing_data %&amp;gt;%
  select(performance_tag)%&amp;gt;%
  mutate(demogs_class=(predict(mdl_demogs, woe_demogs_testing_data,type=&amp;quot;response&amp;quot;)))

# Roc Curve
demogs_cl=(predict(mdl_demogs, woe_demogs_testing_data,type=&amp;quot;response&amp;quot;))
ROCRpred &amp;lt;-prediction(demogs_cl, woe_demogs_testing_data$performance_tag)

# Performance function
ROCRperf = performance(ROCRpred, &amp;quot;tpr&amp;quot;, &amp;quot;fpr&amp;quot;)

# Plot ROC curve,add colors and threshold labels 
plot(ROCRperf, colorize=TRUE, print.cutoffs.at=seq(0,1,by=0.1), text.adj=c(-0.2,1.7))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# optimizing the model through threshold value
pred_demogs$demogs_class&amp;lt;-ifelse(pred_demogs$demogs_class&amp;gt;=0.487,1,0)

 pred_demogs$demogs_class&amp;lt;- as.factor(pred_demogs$demogs_class)


# Evaluating the model performance on the training data

# Confusion Matrix:
conf_mt_demogs&amp;lt;- conf_mat(pred_demogs,truth = performance_tag,estimate = demogs_class)
autoplot(conf_mt_demogs,type=&amp;#39;heatmap&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-15-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Accuracy:
Acc_demogs&amp;lt;- accuracy(pred_demogs,truth = performance_tag,estimate = demogs_class)


# Sensitivity:
sens_demogs&amp;lt;- sens(pred_demogs,truth = performance_tag,estimate = demogs_class)

# specificity:
spec_demogs&amp;lt;-spec(pred_demogs,truth = performance_tag,estimate = demogs_class)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;                       ## Logistic Regression Model based on the combined full data 


mdl_both &amp;lt;- glm(performance_tag ~ ., data = train_data_balanced_over_both, family = &amp;quot;binomial&amp;quot;)

summary(mdl_both)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## glm(formula = performance_tag ~ ., family = &amp;quot;binomial&amp;quot;, data = train_data_balanced_over_both)
## 
## Deviance Residuals: 
##      Min        1Q    Median        3Q       Max  
## -1.78966  -1.09130   0.01439   1.02457   1.83339  
## 
## Coefficients:
##                                                                  Estimate
## (Intercept)                                                      0.002271
## no_of_times_90_dpd_or_worse_in_last_6_months_woe                 0.161435
## no_of_times_60_dpd_or_worse_in_last_6_months_woe                -0.417841
## no_of_times_30_dpd_or_worse_in_last_6_months_woe                 0.415634
## no_of_times_90_dpd_or_worse_in_last_12_months_woe                0.115053
## no_of_times_60_dpd_or_worse_in_last_12_months_woe               -0.091736
## no_of_times_30_dpd_or_worse_in_last_12_months_woe                0.292451
## avgas_cc_utilization_in_last_12_months_woe                       0.470732
## no_of_trades_opened_in_last_6_months_woe                         0.113587
## no_of_trades_opened_in_last_12_months_woe                        0.433156
## no_of_pl_trades_opened_in_last_6_months_woe                     -0.004741
## no_of_pl_trades_opened_in_last_12_months_woe                    -0.179778
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans_woe   0.136610
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans_woe  0.210412
## outstanding_balance_woe                                          0.155117
## total_no_of_trades_woe                                          -0.196505
## presence_of_open_auto_loan_woe                                   0.731419
## age_woe                                                          1.007612
## income_woe                                                       0.357613
## no_of_months_in_current_residence_woe                           -0.154731
## no_of_months_in_current_company_woe                              0.534516
##                                                                 Std. Error
## (Intercept)                                                       0.022538
## no_of_times_90_dpd_or_worse_in_last_6_months_woe                  0.138386
## no_of_times_60_dpd_or_worse_in_last_6_months_woe                  0.202286
## no_of_times_30_dpd_or_worse_in_last_6_months_woe                  0.190004
## no_of_times_90_dpd_or_worse_in_last_12_months_woe                 0.107419
## no_of_times_60_dpd_or_worse_in_last_12_months_woe                 0.141174
## no_of_times_30_dpd_or_worse_in_last_12_months_woe                 0.147437
## avgas_cc_utilization_in_last_12_months_woe                        0.060345
## no_of_trades_opened_in_last_6_months_woe                          0.097469
## no_of_trades_opened_in_last_12_months_woe                         0.140722
## no_of_pl_trades_opened_in_last_6_months_woe                       0.109121
## no_of_pl_trades_opened_in_last_12_months_woe                      0.145382
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans_woe    0.085239
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans_woe   0.095570
## outstanding_balance_woe                                           0.090264
## total_no_of_trades_woe                                            0.096287
## presence_of_open_auto_loan_woe                                    0.674052
## age_woe                                                           0.273021
## income_woe                                                        0.111428
## no_of_months_in_current_residence_woe                             0.094014
## no_of_months_in_current_company_woe                               0.122392
##                                                                 z value
## (Intercept)                                                       0.101
## no_of_times_90_dpd_or_worse_in_last_6_months_woe                  1.167
## no_of_times_60_dpd_or_worse_in_last_6_months_woe                 -2.066
## no_of_times_30_dpd_or_worse_in_last_6_months_woe                  2.187
## no_of_times_90_dpd_or_worse_in_last_12_months_woe                 1.071
## no_of_times_60_dpd_or_worse_in_last_12_months_woe                -0.650
## no_of_times_30_dpd_or_worse_in_last_12_months_woe                 1.984
## avgas_cc_utilization_in_last_12_months_woe                        7.801
## no_of_trades_opened_in_last_6_months_woe                          1.165
## no_of_trades_opened_in_last_12_months_woe                         3.078
## no_of_pl_trades_opened_in_last_6_months_woe                      -0.043
## no_of_pl_trades_opened_in_last_12_months_woe                     -1.237
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans_woe    1.603
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans_woe   2.202
## outstanding_balance_woe                                           1.718
## total_no_of_trades_woe                                           -2.041
## presence_of_open_auto_loan_woe                                    1.085
## age_woe                                                           3.691
## income_woe                                                        3.209
## no_of_months_in_current_residence_woe                            -1.646
## no_of_months_in_current_company_woe                               4.367
##                                                                 Pr(&amp;gt;|z|)    
## (Intercept)                                                     0.919755    
## no_of_times_90_dpd_or_worse_in_last_6_months_woe                0.243389    
## no_of_times_60_dpd_or_worse_in_last_6_months_woe                0.038866 *  
## no_of_times_30_dpd_or_worse_in_last_6_months_woe                0.028706 *  
## no_of_times_90_dpd_or_worse_in_last_12_months_woe               0.284135    
## no_of_times_60_dpd_or_worse_in_last_12_months_woe               0.515817    
## no_of_times_30_dpd_or_worse_in_last_12_months_woe               0.047304 *  
## avgas_cc_utilization_in_last_12_months_woe                      6.16e-15 ***
## no_of_trades_opened_in_last_6_months_woe                        0.243873    
## no_of_trades_opened_in_last_12_months_woe                       0.002083 ** 
## no_of_pl_trades_opened_in_last_6_months_woe                     0.965345    
## no_of_pl_trades_opened_in_last_12_months_woe                    0.216238    
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans_woe  0.109009    
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans_woe 0.027689 *  
## outstanding_balance_woe                                         0.085711 .  
## total_no_of_trades_woe                                          0.041269 *  
## presence_of_open_auto_loan_woe                                  0.277874    
## age_woe                                                         0.000224 ***
## income_woe                                                      0.001330 ** 
## no_of_months_in_current_residence_woe                           0.099800 .  
## no_of_months_in_current_company_woe                             1.26e-05 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## (Dispersion parameter for binomial family taken to be 1)
## 
##     Null deviance: 12321  on 8887  degrees of freedom
## Residual deviance: 11316  on 8867  degrees of freedom
## AIC: 11358
## 
## Number of Fisher Scoring iterations: 4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vif(mdl_both)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                no_of_times_90_dpd_or_worse_in_last_6_months_woe 
##                                                        6.371268 
##                no_of_times_60_dpd_or_worse_in_last_6_months_woe 
##                                                       17.414091 
##                no_of_times_30_dpd_or_worse_in_last_6_months_woe 
##                                                       17.679266 
##               no_of_times_90_dpd_or_worse_in_last_12_months_woe 
##                                                        5.196993 
##               no_of_times_60_dpd_or_worse_in_last_12_months_woe 
##                                                        7.691027 
##               no_of_times_30_dpd_or_worse_in_last_12_months_woe 
##                                                        9.389353 
##                      avgas_cc_utilization_in_last_12_months_woe 
##                                                        2.260409 
##                        no_of_trades_opened_in_last_6_months_woe 
##                                                        3.445880 
##                       no_of_trades_opened_in_last_12_months_woe 
##                                                       10.710460 
##                     no_of_pl_trades_opened_in_last_6_months_woe 
##                                                        5.100970 
##                    no_of_pl_trades_opened_in_last_12_months_woe 
##                                                       12.119244 
##  no_of_inquiries_in_last_6_months_excluding_home_auto_loans_woe 
##                                                        2.714159 
## no_of_inquiries_in_last_12_months_excluding_home_auto_loans_woe 
##                                                        4.656748 
##                                         outstanding_balance_woe 
##                                                        3.984862 
##                                          total_no_of_trades_woe 
##                                                        4.366908 
##                                  presence_of_open_auto_loan_woe 
##                                                        1.072847 
##                                                         age_woe 
##                                                        1.005329 
##                                                      income_woe 
##                                                        1.090991 
##                           no_of_months_in_current_residence_woe 
##                                                        1.466685 
##                             no_of_months_in_current_company_woe 
##                                                        1.034017&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# updating the logistic model with the predictors vif values &amp;lt;= 2

updated1_mdl_both &amp;lt;- glm(performance_tag ~no_of_times_30_dpd_or_worse_in_last_12_months_woe+avgas_cc_utilization_in_last_12_months_woe+no_of_trades_opened_in_last_12_months_woe+no_of_inquiries_in_last_6_months_excluding_home_auto_loans_woe+age_woe+no_of_months_in_current_company_woe+income_woe+no_of_months_in_current_residence_woe , data = train_data_balanced_over_both, family = &amp;quot;binomial&amp;quot;)

summary(updated1_mdl_both)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## glm(formula = performance_tag ~ no_of_times_30_dpd_or_worse_in_last_12_months_woe + 
##     avgas_cc_utilization_in_last_12_months_woe + no_of_trades_opened_in_last_12_months_woe + 
##     no_of_inquiries_in_last_6_months_excluding_home_auto_loans_woe + 
##     age_woe + no_of_months_in_current_company_woe + income_woe + 
##     no_of_months_in_current_residence_woe, family = &amp;quot;binomial&amp;quot;, 
##     data = train_data_balanced_over_both)
## 
## Deviance Residuals: 
##     Min       1Q   Median       3Q      Max  
## -1.7363  -1.0830   0.0248   1.0269   1.8222  
## 
## Coefficients:
##                                                                Estimate
## (Intercept)                                                     0.00110
## no_of_times_30_dpd_or_worse_in_last_12_months_woe               0.42175
## avgas_cc_utilization_in_last_12_months_woe                      0.50465
## no_of_trades_opened_in_last_12_months_woe                       0.41858
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans_woe  0.24610
## age_woe                                                         0.99032
## no_of_months_in_current_company_woe                             0.53265
## income_woe                                                      0.36258
## no_of_months_in_current_residence_woe                          -0.16932
##                                                                Std. Error
## (Intercept)                                                       0.02248
## no_of_times_30_dpd_or_worse_in_last_12_months_woe                 0.05779
## avgas_cc_utilization_in_last_12_months_woe                        0.05606
## no_of_trades_opened_in_last_12_months_woe                         0.05931
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans_woe    0.06575
## age_woe                                                           0.27247
## no_of_months_in_current_company_woe                               0.12209
## income_woe                                                        0.11100
## no_of_months_in_current_residence_woe                             0.09166
##                                                                z value Pr(&amp;gt;|z|)
## (Intercept)                                                      0.049 0.960987
## no_of_times_30_dpd_or_worse_in_last_12_months_woe                7.298 2.92e-13
## avgas_cc_utilization_in_last_12_months_woe                       9.002  &amp;lt; 2e-16
## no_of_trades_opened_in_last_12_months_woe                        7.058 1.69e-12
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans_woe   3.743 0.000182
## age_woe                                                          3.635 0.000278
## no_of_months_in_current_company_woe                              4.363 1.28e-05
## income_woe                                                       3.266 0.001090
## no_of_months_in_current_residence_woe                           -1.847 0.064715
##                                                                   
## (Intercept)                                                       
## no_of_times_30_dpd_or_worse_in_last_12_months_woe              ***
## avgas_cc_utilization_in_last_12_months_woe                     ***
## no_of_trades_opened_in_last_12_months_woe                      ***
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans_woe ***
## age_woe                                                        ***
## no_of_months_in_current_company_woe                            ***
## income_woe                                                     ** 
## no_of_months_in_current_residence_woe                          .  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## (Dispersion parameter for binomial family taken to be 1)
## 
##     Null deviance: 12321  on 8887  degrees of freedom
## Residual deviance: 11340  on 8879  degrees of freedom
## AIC: 11358
## 
## Number of Fisher Scoring iterations: 4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vif(updated1_mdl_both)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##              no_of_times_30_dpd_or_worse_in_last_12_months_woe 
##                                                       1.440298 
##                     avgas_cc_utilization_in_last_12_months_woe 
##                                                       1.959183 
##                      no_of_trades_opened_in_last_12_months_woe 
##                                                       1.913825 
## no_of_inquiries_in_last_6_months_excluding_home_auto_loans_woe 
##                                                       1.629539 
##                                                        age_woe 
##                                                       1.003555 
##                            no_of_months_in_current_company_woe 
##                                                       1.032024 
##                                                     income_woe 
##                                                       1.085803 
##                          no_of_months_in_current_residence_woe 
##                                                       1.396972&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;updated1_mdl_both$performance_tag&amp;lt;- as.factor(updated1_mdl_both$performance_tag)


# Predict on the testing data
pred_both&amp;lt;- woe_both_testing_data %&amp;gt;%
  select(performance_tag)%&amp;gt;%
  mutate(both_class=(predict(updated1_mdl_both, woe_both_testing_data,type=&amp;quot;response&amp;quot;)))

# Roc Curve
both_cl=(predict(updated1_mdl_both, woe_both_testing_data,type=&amp;quot;response&amp;quot;))
ROCRpred_both &amp;lt;-prediction(both_cl, woe_both_testing_data$performance_tag)
# Performance function
ROCRperf_both = performance(ROCRpred_both, &amp;quot;tpr&amp;quot;, &amp;quot;fpr&amp;quot;)

# Plot ROC curve,add colors and threshold labels 
 plot(ROCRperf_both, colorize=TRUE, print.cutoffs.at=seq(0,1,by=0.1), text.adj=c(-0.2,1.7))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# optimizing the model through threshold value

pred_both$both_class&amp;lt;-ifelse(pred_both$both_class&amp;gt;=0.53,1,0)



 pred_both$both_class&amp;lt;- as.factor(pred_both$both_class)


# Evaluating the model performance on the training data

# Confusion Matrix:
conf_mt_both&amp;lt;- conf_mat(pred_both,truth = performance_tag,estimate = both_class)
autoplot(conf_mt_both,type=&amp;#39;heatmap&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-16-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Accuracy:
Acc_both&amp;lt;- accuracy(pred_both,truth = performance_tag,estimate = both_class)


# Sensitivity:
sens_both&amp;lt;- sens(pred_both,truth = performance_tag,estimate = both_class)

# specificity:
spec_both&amp;lt;-spec(pred_both,truth = performance_tag,estimate = both_class)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;cross-validation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Cross validation&lt;/h2&gt;
&lt;p&gt;The Cross validation is used for resampling and evaluation of the performance of our logistic regression models.&lt;/p&gt;
&lt;p&gt;For the 1st logistic regression model running the cross validation with 10 folds gave us an average accuracy of 0.587%, while for the 2nd logistic regression model running the cross validation with 10 folds gave us an average accuracy of 0.631%&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Random seed for reproducibility
set.seed(1)

mdl_cv_demogs &amp;lt;- logistic_reg()%&amp;gt;%
set_engine(&amp;#39;glm&amp;#39;) %&amp;gt;%
set_mode(&amp;#39;classification&amp;#39;)

# Create 10 folds of the dataset
folds_demogs &amp;lt;- vfold_cv(train_data_balanced_over, v = 10,strata = performance_tag)

# Fit a model for every fold and calculate MAE and RMSE
fits_cv_demogs &amp;lt;- fit_resamples(mdl_cv_demogs,
performance_tag ~ .,
resamples = folds_demogs,
metrics = metric_set(accuracy, spec,sens))

# Collect raw errors of all model runs
all_errors_demogs&amp;lt;- collect_metrics(fits_cv_demogs,summarize = FALSE)

print(all_errors_demogs)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Found more than one class &amp;quot;tbl_df&amp;quot; in cache; using the first, from namespace &amp;#39;tibble&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Also defined by &amp;#39;memisc&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Found more than one class &amp;quot;tbl_df&amp;quot; in cache; using the first, from namespace &amp;#39;tibble&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Also defined by &amp;#39;memisc&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 30 x 5
##    id     .metric  .estimator .estimate .config             
##    &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;               
##  1 Fold01 accuracy binary         0.572 Preprocessor1_Model1
##  2 Fold01 spec     binary         0.534 Preprocessor1_Model1
##  3 Fold01 sens     binary         0.611 Preprocessor1_Model1
##  4 Fold02 accuracy binary         0.580 Preprocessor1_Model1
##  5 Fold02 spec     binary         0.550 Preprocessor1_Model1
##  6 Fold02 sens     binary         0.611 Preprocessor1_Model1
##  7 Fold03 accuracy binary         0.586 Preprocessor1_Model1
##  8 Fold03 spec     binary         0.575 Preprocessor1_Model1
##  9 Fold03 sens     binary         0.597 Preprocessor1_Model1
## 10 Fold04 accuracy binary         0.597 Preprocessor1_Model1
## # ... with 20 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
ggplot(all_errors_demogs, aes(x = .estimate,fill = .metric)) +
geom_histogram()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Collect and summarize errors of all model runs
collect_metrics(fits_cv_demogs)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 6
##   .metric  .estimator  mean     n std_err .config             
##   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;      &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;               
## 1 accuracy binary     0.591    10 0.00528 Preprocessor1_Model1
## 2 sens     binary     0.625    10 0.00739 Preprocessor1_Model1
## 3 spec     binary     0.558    10 0.00720 Preprocessor1_Model1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Random seed for reproducibility
set.seed(131)

mdl_cv_both&amp;lt;-logistic_reg()%&amp;gt;%
set_engine(&amp;#39;glm&amp;#39;) %&amp;gt;%
set_mode(&amp;#39;classification&amp;#39;)

# Create 10 folds of the dataset
folds_both &amp;lt;- vfold_cv(train_data_balanced_over_both, v = 10,strata = performance_tag)

# Fit a model for every fold and calculate MAE and RMSE
fits_cv_both &amp;lt;- fit_resamples(mdl_cv_both,
performance_tag ~ .,
resamples = folds_both,
metrics = metric_set(accuracy, spec,sens))

# Collect raw errors of all model runs
all_errors_both&amp;lt;- collect_metrics(fits_cv_both,summarize = FALSE)

print(all_errors_both)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 30 x 5
##    id     .metric  .estimator .estimate .config             
##    &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;               
##  1 Fold01 accuracy binary         0.625 Preprocessor1_Model1
##  2 Fold01 spec     binary         0.670 Preprocessor1_Model1
##  3 Fold01 sens     binary         0.580 Preprocessor1_Model1
##  4 Fold02 accuracy binary         0.620 Preprocessor1_Model1
##  5 Fold02 spec     binary         0.663 Preprocessor1_Model1
##  6 Fold02 sens     binary         0.578 Preprocessor1_Model1
##  7 Fold03 accuracy binary         0.635 Preprocessor1_Model1
##  8 Fold03 spec     binary         0.679 Preprocessor1_Model1
##  9 Fold03 sens     binary         0.591 Preprocessor1_Model1
## 10 Fold04 accuracy binary         0.652 Preprocessor1_Model1
## # ... with 20 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
ggplot(all_errors_both, aes(x = .estimate,fill = .metric)) +
geom_histogram()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/project/index.en_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Collect and summarize errors of all model runs
collect_metrics(fits_cv_both)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 6
##   .metric  .estimator  mean     n std_err .config             
##   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;      &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;               
## 1 accuracy binary     0.634    10 0.00361 Preprocessor1_Model1
## 2 sens     binary     0.579    10 0.00438 Preprocessor1_Model1
## 3 spec     binary     0.690    10 0.00984 Preprocessor1_Model1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion-from-the-logistic-regression-models&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conclusion from the Logistic regression models&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Comparing the first model accuracy of 0.569% to the cross validation accuracy of 0.587% , we can see that our model is well built.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Comparing the second model accuracy of 0.625% to the cross validation accuracy of 0.631% , we can see that our model is well built.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Comparing the first model accuracy of 0.569% to the second model accuracy of 0.625% , we can see that the second model is better in prediction than the first model, so that the second model that used the combined data was better than the first model that used only the demographic data.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;building-support-vector-machine-model-using-demographics-dataset&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Building Support Vector Machine Model using demographics dataset&lt;/h2&gt;
&lt;p&gt;The support vector Machine model is built for performance tag vs other predictors from the demographic dataset with the balanced training data with the C-classification type and radial kernel.&lt;/p&gt;
&lt;p&gt;The hyperplane of the previous classifier is used here to predict the performance tag of demographic testing data.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;building-support-vector-machine-model-using-both-demographics-and-credit-bureau-datasets&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Building Support Vector Machine Model using both demographics and credit bureau datasets&lt;/h2&gt;
&lt;p&gt;The support vector Machine model is built for performance tag vs other predictors from the demographic dataset with the balanced training data with the C-classification type and radial kernel.&lt;/p&gt;
&lt;p&gt;The hyperplane of the previous classifier is used here to predict the performance tag of combined testing data.&lt;/p&gt;
&lt;div id=&#34;sensitivity-and-specificity-check-of-svm&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Sensitivity and Specificity check of SVM&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;accuracy-check-of-svm&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Accuracy Check of SVM&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tree Based Method A04</title>
      <link>/post/nouran/</link>
      <pubDate>Fri, 30 Jul 2021 00:00:00 +0000</pubDate>
      <guid>/post/nouran/</guid>
      <description>
&lt;script src=&#34;/post/nouran/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;the-goal&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The Goal&lt;/h3&gt;
&lt;p&gt;The goal behind this study is to use the decision tree to build a tree-based model for prediction, so that we will use the provided data set to identify whether a customer will subscribe to a term deposit or not.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The data&lt;/h3&gt;
&lt;p&gt;The data used in this study was obtained from UCI website and we specifically used the Bank-full.csv dataset.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;splitting-the-data-to-training-and-testing-splits&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Splitting the data to training and testing splits&lt;/h3&gt;
&lt;p&gt;In this step we are going to split the data so that 3/4 of the data would be assigned for training and the remaining 1/4 of the data would be assigned for testing.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;create-the-decision-tree-model&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Create the decision tree model&lt;/h3&gt;
&lt;p&gt;Creating the decision tree model that will be used to identify whether a customer will subscribe to a term deposit or not.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;decision_tree_mdl &amp;lt;- decision_tree() %&amp;gt;%
  # Specify the engine
  set_engine(&amp;#39;rpart&amp;#39;) %&amp;gt;%
  # Specify the mode
  set_mode(&amp;#39;classification&amp;#39;)

decision_tree_mdl&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Decision Tree Model Specification (classification)
## 
## Computational engine: rpart&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;creating-the-recipe&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Creating the recipe&lt;/h3&gt;
&lt;p&gt;Creating the suitable recipe to apply feature engineering to our data&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## Data Recipe
## 
## Inputs:
## 
##       role #variables
##    outcome          1
##  predictor         16
## 
## Operations:
## 
## Correlation filter on all_numeric()
## Centering and scaling for all_numeric()
## Dummy variables from all_nominal(), -all_outcomes()
## Zero variance filter on all_predictors()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;create-workflow&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Create workflow&lt;/h3&gt;
&lt;p&gt;Create a workflow that combine the model and the recipe.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## == Workflow ====================================================================
## Preprocessor: Recipe
## Model: decision_tree()
## 
## -- Preprocessor ----------------------------------------------------------------
## 4 Recipe Steps
## 
## * step_corr()
## * step_normalize()
## * step_dummy()
## * step_zv()
## 
## -- Model -----------------------------------------------------------------------
## Decision Tree Model Specification (classification)
## 
## Computational engine: rpart&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;fit-the-model&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Fit the model&lt;/h3&gt;
&lt;p&gt;Train and fitting the model using the training split of the data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## == Workflow [trained] ==========================================================
## Preprocessor: Recipe
## Model: decision_tree()
## 
## -- Preprocessor ----------------------------------------------------------------
## 4 Recipe Steps
## 
## * step_corr()
## * step_normalize()
## * step_dummy()
## * step_zv()
## 
## -- Model -----------------------------------------------------------------------
## n= 33907 
## 
## node), split, n, loss, yval, (yprob)
##       * denotes terminal node
## 
##  1) root 33907 3966 no (0.88303300 0.11696700)  
##    2) duration&amp;lt; 1.013834 30124 2309 no (0.92335015 0.07664985)  
##      4) poutcome_success&amp;lt; 0.5 29150 1715 no (0.94116638 0.05883362) *
##      5) poutcome_success&amp;gt;=0.5 974  380 yes (0.39014374 0.60985626)  
##       10) duration&amp;lt; -0.4872674 190   38 no (0.80000000 0.20000000) *
##       11) duration&amp;gt;=-0.4872674 784  228 yes (0.29081633 0.70918367) *
##    3) duration&amp;gt;=1.013834 3783 1657 no (0.56198784 0.43801216)  
##      6) duration&amp;lt; 2.215492 2461  881 no (0.64201544 0.35798456)  
##       12) poutcome_success&amp;lt; 0.5 2344  785 no (0.66510239 0.33489761) *
##       13) poutcome_success&amp;gt;=0.5 117   21 yes (0.17948718 0.82051282) *
##      7) duration&amp;gt;=2.215492 1322  546 yes (0.41301059 0.58698941) *&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;make-predictions-for-training-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Make predictions for training data&lt;/h3&gt;
&lt;p&gt;Using the trained model for prediction on the training data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 33,907 x 18
##    .pred_class   age job         marital education default balance housing loan 
##    &amp;lt;fct&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;   &amp;lt;fct&amp;gt;     &amp;lt;fct&amp;gt;     &amp;lt;int&amp;gt; &amp;lt;fct&amp;gt;   &amp;lt;fct&amp;gt;
##  1 no             58 management  married tertiary  no         2143 yes     no   
##  2 no             44 technician  single  secondary no           29 yes     no   
##  3 no             47 blue-collar married unknown   no         1506 yes     no   
##  4 no             35 management  married tertiary  no          231 yes     no   
##  5 no             28 management  single  tertiary  no          447 yes     yes  
##  6 no             42 entreprene~ divorc~ tertiary  yes           2 yes     no   
##  7 no             58 retired     married primary   no          121 yes     no   
##  8 no             43 technician  single  secondary no          593 yes     no   
##  9 no             29 admin.      single  secondary no          390 yes     no   
## 10 no             53 technician  married secondary no            6 yes     no   
## # ... with 33,897 more rows, and 9 more variables: contact &amp;lt;fct&amp;gt;, day &amp;lt;chr&amp;gt;,
## #   month &amp;lt;fct&amp;gt;, duration &amp;lt;int&amp;gt;, campaign &amp;lt;int&amp;gt;, pdays &amp;lt;int&amp;gt;, previous &amp;lt;int&amp;gt;,
## #   poutcome &amp;lt;fct&amp;gt;, y &amp;lt;fct&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;evaluate-performance-on-tarining-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Evaluate performance on tarining data&lt;/h3&gt;
&lt;p&gt;Evaluate the performance of the model on the training data.The accuracy of the model on the training data is 90.2%.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##           Truth
## Prediction    no   yes
##        no  29146  2538
##        yes   795  1428&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   .metric  .estimator .estimate
##   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
## 1 accuracy binary         0.902
## 2 sens     binary         0.973
## 3 spec     binary         0.360&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;make-predictions-for-testing-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Make predictions for testing data&lt;/h3&gt;
&lt;p&gt;Using the trained model for prediction on the testing data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 11,304 x 18
##    .pred_class   age job         marital education default balance housing loan 
##    &amp;lt;fct&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;   &amp;lt;fct&amp;gt;     &amp;lt;fct&amp;gt;     &amp;lt;int&amp;gt; &amp;lt;fct&amp;gt;   &amp;lt;fct&amp;gt;
##  1 no             33 entreprene~ married secondary no            2 yes     yes  
##  2 no             33 unknown     single  unknown   no            1 no      no   
##  3 no             41 admin.      divorc~ secondary no          270 yes     no   
##  4 no             57 services    married secondary no          162 yes     no   
##  5 no             45 admin.      single  unknown   no           13 yes     no   
##  6 no             56 management  married tertiary  no          779 yes     no   
##  7 no             40 retired     married primary   no            0 yes     yes  
##  8 no             46 management  single  secondary no         -246 yes     no   
##  9 no             36 technician  single  secondary no          265 yes     yes  
## 10 no             57 technician  married secondary no          839 no      yes  
## # ... with 11,294 more rows, and 9 more variables: contact &amp;lt;fct&amp;gt;, day &amp;lt;chr&amp;gt;,
## #   month &amp;lt;fct&amp;gt;, duration &amp;lt;int&amp;gt;, campaign &amp;lt;int&amp;gt;, pdays &amp;lt;int&amp;gt;, previous &amp;lt;int&amp;gt;,
## #   poutcome &amp;lt;fct&amp;gt;, y &amp;lt;fct&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;evaluate-performance-on-testing-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Evaluate performance on testing data&lt;/h3&gt;
&lt;p&gt;Evaluate the performance of the model on the testing data.The accuracy of the model on the testing data is 90%.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##           Truth
## Prediction   no  yes
##        no  9698  847
##        yes  283  476&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   .metric  .estimator .estimate
##   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
## 1 accuracy binary         0.900
## 2 sens     binary         0.972
## 3 spec     binary         0.360&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;apply-cross-validation-method-for-model-evaluation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Apply Cross Validation method for model evaluation&lt;/h2&gt;
&lt;p&gt;We will use the cross-validation resampling method to evaluate the performance of our decision tree model.&lt;/p&gt;
&lt;div id=&#34;split-data-into-folds&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Split data into folds&lt;/h3&gt;
&lt;p&gt;The train data is split-ted into 10 folds&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## #  10-fold cross-validation using stratification 
## # A tibble: 10 x 2
##    splits               id    
##    &amp;lt;list&amp;gt;               &amp;lt;chr&amp;gt; 
##  1 &amp;lt;split [30515/3392]&amp;gt; Fold01
##  2 &amp;lt;split [30516/3391]&amp;gt; Fold02
##  3 &amp;lt;split [30516/3391]&amp;gt; Fold03
##  4 &amp;lt;split [30516/3391]&amp;gt; Fold04
##  5 &amp;lt;split [30516/3391]&amp;gt; Fold05
##  6 &amp;lt;split [30516/3391]&amp;gt; Fold06
##  7 &amp;lt;split [30517/3390]&amp;gt; Fold07
##  8 &amp;lt;split [30517/3390]&amp;gt; Fold08
##  9 &amp;lt;split [30517/3390]&amp;gt; Fold09
## 10 &amp;lt;split [30517/3390]&amp;gt; Fold10&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;fit-resamples&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Fit resamples&lt;/h3&gt;
&lt;p&gt;Fit the folds into the workflow.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;collect-cv-metrics&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Collect CV metrics&lt;/h3&gt;
&lt;p&gt;Show the metrics resulted from Cross-Validation process. The accurcay achieved after using the 10 folds cross validation for resampling is 90.1% .&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 6
##   .metric  .estimator  mean     n std_err .config             
##   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;      &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;               
## 1 accuracy binary     0.901    10 0.00143 Preprocessor1_Model1
## 2 roc_auc  binary     0.747    10 0.00361 Preprocessor1_Model1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;hyperparameter-tuning&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Hyperparameter tuning&lt;/h2&gt;
&lt;p&gt;In this part we will tune the hyperparameters of the decision tree and check the tuning effect on the model accuracy.&lt;/p&gt;
&lt;div id=&#34;set-the-hyperparameters-for-tuning-in-the-decision-tree&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Set the hyperparameters for tuning in the decision tree&lt;/h3&gt;
&lt;p&gt;We will modify the model so that the hyperparameters will be undergo tuuining and accordingly the workflow would be updated with the new model.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tune_model &amp;lt;- decision_tree(cost_complexity = tune(),
tree_depth = tune(),
min_n = tune()) %&amp;gt;%
set_engine(&amp;#39;rpart&amp;#39;) %&amp;gt;%
set_mode(&amp;#39;classification&amp;#39;)

tune_wkfl &amp;lt;- wkfl %&amp;gt;%
update_model(tune_model)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;create-a-tuning-grid&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Create a tuning grid&lt;/h3&gt;
&lt;p&gt;Create the tuning grid with 3 levels for each parameter.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(216)
grid&amp;lt;-grid_regular(parameters(tune_model),levels = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;hyperparameter-tuning-with-cross-validation&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Hyperparameter tuning with cross validation&lt;/h3&gt;
&lt;p&gt;From the shown graph we can see the accuracy Vs. the different combination of the 3 hyperparameters levels.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tune_results &amp;lt;- tune_wkfl %&amp;gt;%
tune_grid(resamples = folds,
grid = grid,
metrics = metric_set(accuracy))

autoplot(tune_results)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/nouran/index_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tune_results %&amp;gt;%
collect_metrics()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 27 x 9
##    cost_complexity tree_depth min_n .metric  .estimator  mean     n   std_err
##              &amp;lt;dbl&amp;gt;      &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;      &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;
##  1    0.0000000001          1     2 accuracy binary     0.883    10 0.0000417
##  2    0.00000316            1     2 accuracy binary     0.883    10 0.0000417
##  3    0.1                   1     2 accuracy binary     0.883    10 0.0000417
##  4    0.0000000001          8     2 accuracy binary     0.899    10 0.000797 
##  5    0.00000316            8     2 accuracy binary     0.899    10 0.000797 
##  6    0.1                   8     2 accuracy binary     0.883    10 0.0000417
##  7    0.0000000001         15     2 accuracy binary     0.891    10 0.00151  
##  8    0.00000316           15     2 accuracy binary     0.891    10 0.00151  
##  9    0.1                  15     2 accuracy binary     0.883    10 0.0000417
## 10    0.0000000001          1    21 accuracy binary     0.883    10 0.0000417
## # ... with 17 more rows, and 1 more variable: .config &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;select-the-best-parameters&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Select the best parameters&lt;/h3&gt;
&lt;p&gt;From the above graph we can see that the best hyperparameters combination is minimum node size of 40, tree depth of 8 and the cost complexity of 0.0000000001, where this combination result in an accuracy of 92.5%&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;final_params &amp;lt;- select_best(tune_results)
final_params&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 4
##   cost_complexity tree_depth min_n .config              
##             &amp;lt;dbl&amp;gt;      &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;                
## 1    0.0000000001          8    40 Preprocessor1_Model22&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;finalize-the-model&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Finalize the model&lt;/h3&gt;
&lt;p&gt;Finalize the model with the best value for each hyperparameter.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;best_spec &amp;lt;- finalize_model(tune_model,
final_params)
best_spec&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Decision Tree Model Specification (classification)
## 
## Main Arguments:
##   cost_complexity = 1e-10
##   tree_depth = 8
##   min_n = 40
## 
## Computational engine: rpart&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;passing-the-testing-data-to-the-tuned-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Passing the testing data to the tuned model&lt;/h2&gt;
&lt;p&gt;Make prediction with the tuned model on the testing data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tuned_decision_tree_mdl &amp;lt;- decision_tree(cost_complexity = 1e-10,tree_depth = 8,min_n = 2) %&amp;gt;%
  # Specify the engine
  set_engine(&amp;#39;rpart&amp;#39;) %&amp;gt;%
  # Specify the mode
  set_mode(&amp;#39;classification&amp;#39;)

tuned_wkflw &amp;lt;- workflow() %&amp;gt;%
  # Add model
  add_model(tuned_decision_tree_mdl) %&amp;gt;%
  # Add recipe
  add_recipe(the_recipe)

fit_tuned_mdl &amp;lt;- tuned_wkflw %&amp;gt;%
  fit(data=test_data)


tuned_prediction&amp;lt;-predict(fit_tuned_mdl, test_data,type = &amp;#39;class&amp;#39;) %&amp;gt;%
  bind_cols(test_data %&amp;gt;% select(everything()))

tuned_prediction&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 11,304 x 18
##    .pred_class   age job         marital education default balance housing loan 
##    &amp;lt;fct&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;   &amp;lt;fct&amp;gt;     &amp;lt;fct&amp;gt;     &amp;lt;int&amp;gt; &amp;lt;fct&amp;gt;   &amp;lt;fct&amp;gt;
##  1 no             33 entreprene~ married secondary no            2 yes     yes  
##  2 no             33 unknown     single  unknown   no            1 no      no   
##  3 no             41 admin.      divorc~ secondary no          270 yes     no   
##  4 no             57 services    married secondary no          162 yes     no   
##  5 no             45 admin.      single  unknown   no           13 yes     no   
##  6 no             56 management  married tertiary  no          779 yes     no   
##  7 no             40 retired     married primary   no            0 yes     yes  
##  8 no             46 management  single  secondary no         -246 yes     no   
##  9 no             36 technician  single  secondary no          265 yes     yes  
## 10 no             57 technician  married secondary no          839 no      yes  
## # ... with 11,294 more rows, and 9 more variables: contact &amp;lt;fct&amp;gt;, day &amp;lt;chr&amp;gt;,
## #   month &amp;lt;fct&amp;gt;, duration &amp;lt;int&amp;gt;, campaign &amp;lt;int&amp;gt;, pdays &amp;lt;int&amp;gt;, previous &amp;lt;int&amp;gt;,
## #   poutcome &amp;lt;fct&amp;gt;, y &amp;lt;fct&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;evaluate-the-performance-of-the-tuned-model&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Evaluate the performance of the tuned model&lt;/h3&gt;
&lt;p&gt;Evaluate the performance of the tuned model on the testing data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;conf_mat(tuned_prediction, truth = y, estimate = .pred_class)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           Truth
## Prediction   no  yes
##        no  9821  688
##        yes  160  635&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test_metric_tuned&amp;lt;- custom_metrics(tuned_prediction,
truth = y,
estimate = .pred_class)

test_metric_tuned&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   .metric  .estimator .estimate
##   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
## 1 accuracy binary         0.925
## 2 sens     binary         0.984
## 3 spec     binary         0.480&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;The accuracy associated with the untuned model on the training data is 90.2%, and that associated with the untuned model on the testing data is 90% and that associated with the same model using cross validation resampling method is 90.1%. The accuracy in the testing data is quite good and it is slightly less than the accuracy in the training data which indicates that our model is not exposed to overfitting on the training data, also the accuracy resulted from the testing data is comparable with the accuracy we got from cross-validation resampling method that indicates that our model is working properly. After tuning the model with the best combination of the 3 hyperparameters that are min_n=40 , tree_depth=8 and the cost_complexity=0.0000000001 we got an accuracy of 92.5% that is considered the highest accuracy. This shows us the importance and the effect of tuning the decision tree model hyperparameters on the accuracy of the model.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A03 Resampling Methods</title>
      <link>/post/a03-resampling-methods/</link>
      <pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate>
      <guid>/post/a03-resampling-methods/</guid>
      <description>
&lt;script src=&#34;/post/a03-resampling-methods/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;the-goal&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The Goal&lt;/h3&gt;
&lt;p&gt;The goal behind this study is to discuss two of the most commonly used resampling methods, cross-validation and the bootstrap and we would apply both resampling methods on linear and logistic regression models.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;first-for-logistic-regression-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;First For Logistic Regression Model:&lt;/h2&gt;
&lt;div id=&#34;the-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The data&lt;/h3&gt;
&lt;p&gt;The data used in this study was obtained from UCI website and we specifically used the Bank-full.csv dataset.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;splitting-the-data-to-training-and-testing-splits&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Splitting the data to training and testing splits&lt;/h3&gt;
&lt;p&gt;In this step we are going to split the data so that 3/4 of the data would be assigned for training and the remaining 1/4 of the data would be assigned for testing.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;create-the-logistic-regression-model&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Create the logistic regression model&lt;/h3&gt;
&lt;p&gt;Creating the logistic regression model that will be used to identify whether a customer will subscribe to a term deposit or not.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;creating-the-recipe&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Creating the recipe&lt;/h3&gt;
&lt;p&gt;Creating the suitable recipe to apply feature engineering to our data&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;create-workflow&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Create workflow&lt;/h3&gt;
&lt;p&gt;Create a workflow that combine the model and the recipe.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;fit-the-model&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Fit the model&lt;/h3&gt;
&lt;p&gt;Train and fitting the model using the training split of the data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 35 x 5
##    term              estimate std.error statistic  p.value
##    &amp;lt;chr&amp;gt;                &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
##  1 (Intercept)         -1.65     0.126     -13.1  3.88e-39
##  2 duration             1.06     0.0189     56.3  0       
##  3 campaign            -0.272    0.0358     -7.60 2.94e-14
##  4 job_blue.collar     -0.368    0.0833     -4.41 1.01e- 5
##  5 job_entrepreneur    -0.367    0.143      -2.57 1.01e- 2
##  6 job_housemaid       -0.441    0.150      -2.95 3.20e- 3
##  7 job_management      -0.243    0.0838     -2.90 3.72e- 3
##  8 job_retired          0.166    0.0997      1.67 9.57e- 2
##  9 job_self.employed   -0.330    0.128      -2.57 1.03e- 2
## 10 job_services        -0.242    0.0971     -2.49 1.27e- 2
## 11 job_student          0.521    0.119       4.37 1.23e- 5
## 12 job_technician      -0.183    0.0794     -2.31 2.11e- 2
## # ... with 23 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;make-predictions-for-training-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Make predictions for training data&lt;/h3&gt;
&lt;p&gt;Using the trained model for prediction on the training data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 33,907 x 11
##    .pred_class y     job          education housing loan  contact month duration
##    &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt;        &amp;lt;fct&amp;gt;     &amp;lt;fct&amp;gt;   &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt;   &amp;lt;fct&amp;gt;    &amp;lt;int&amp;gt;
##  1 no          no    management   tertiary  yes     no    unknown may        261
##  2 no          no    entrepreneur secondary yes     yes   unknown may         76
##  3 no          no    blue-collar  unknown   yes     no    unknown may         92
##  4 no          no    unknown      unknown   no      no    unknown may        198
##  5 no          no    management   tertiary  yes     no    unknown may        139
##  6 no          no    technician   secondary yes     no    unknown may         55
##  7 no          no    admin.       secondary yes     no    unknown may        137
##  8 no          no    technician   secondary yes     no    unknown may        517
##  9 no          no    technician   unknown   yes     no    unknown may         71
## 10 no          no    services     secondary yes     no    unknown may        174
## # ... with 33,897 more rows, and 2 more variables: campaign &amp;lt;int&amp;gt;,
## #   poutcome &amp;lt;fct&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;evaluate-performance-on-tarining-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Evaluate performance on tarining data&lt;/h3&gt;
&lt;p&gt;Evaluate the performance of the model on the training data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##           Truth
## Prediction    no   yes
##        no  29193  2595
##        yes   748  1371&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   .metric  .estimator .estimate
##   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
## 1 accuracy binary         0.901
## 2 sens     binary         0.975
## 3 spec     binary         0.346&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;make-predictions-for-testing-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Make predictions for testing data&lt;/h3&gt;
&lt;p&gt;Using the trained model for prediction on the testing data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 11,304 x 11
##    .pred_class y     job          education housing loan  contact month duration
##    &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt;        &amp;lt;fct&amp;gt;     &amp;lt;fct&amp;gt;   &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt;   &amp;lt;fct&amp;gt;    &amp;lt;int&amp;gt;
##  1 no          no    technician   secondary yes     no    unknown may        151
##  2 no          no    management   tertiary  yes     yes   unknown may        217
##  3 no          no    entrepreneur tertiary  yes     no    unknown may        380
##  4 no          no    retired      primary   yes     no    unknown may         50
##  5 no          no    admin.       secondary yes     no    unknown may        222
##  6 no          no    retired      primary   yes     no    unknown may        353
##  7 no          no    admin.       unknown   yes     no    unknown may         98
##  8 no          no    blue-collar  primary   yes     no    unknown may         38
##  9 no          no    retired      primary   yes     no    unknown may        219
## 10 no          no    technician   secondary yes     yes   unknown may        348
## # ... with 11,294 more rows, and 2 more variables: campaign &amp;lt;int&amp;gt;,
## #   poutcome &amp;lt;fct&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;evaluate-performance-on-testing-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Evaluate performance on testing data&lt;/h3&gt;
&lt;p&gt;Evaluate the performance of the model on the testing data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##           Truth
## Prediction   no  yes
##        no  9754  875
##        yes  227  448&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   .metric  .estimator .estimate
##   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
## 1 accuracy binary         0.903
## 2 sens     binary         0.977
## 3 spec     binary         0.339&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;apply-cross-validation-method-for-model-evaluation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Apply Cross Validation method for model evaluation&lt;/h2&gt;
&lt;p&gt;We will use the cross-validation resampling method to evaluate the performance of our logestic regression model.&lt;/p&gt;
&lt;div id=&#34;split-data-into-folds&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Split data into folds&lt;/h3&gt;
&lt;p&gt;The train data is split-ted into 5 folds&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;fit-resamples&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Fit resamples&lt;/h3&gt;
&lt;p&gt;Fit the folds into the workflow.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;collect-cv-metrics&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Collect CV metrics&lt;/h3&gt;
&lt;p&gt;Show the metrics resulted from Cross-Validation process&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 6
##   .metric  .estimator  mean     n std_err .config             
##   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;      &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;               
## 1 accuracy binary     0.902     5 0.00165 Preprocessor1_Model1
## 2 roc_auc  binary     0.904     5 0.00174 Preprocessor1_Model1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;The accuracy associated with the model using the training data is 90.1%, that associated with the model using the testing data is 90.3% and that associated with the model using cross validation resampling method is 90.1%. The accuracy in the testing data is quite good and it is slightly better than the accuracy in the training data which indicates that our model is not exposed to overfitting on the training data, also the accuracy resulted from the testing data is comparable with the accuracy we got from cross-validation resampling method that indicates that our model is working properly.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;applying-bootstrap-resampling-method&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Applying Bootstrap resampling method&lt;/h2&gt;
&lt;p&gt;In this part we are estimating the accuracy of a Logestic Regression Model through the bootstrap approach which can be used to assess the variability of the coefficient estimates (Betas) and predictions from a statistical learning method.&lt;/p&gt;
&lt;p&gt;The standard error reflects the variability between the estimates we would obtain if we repeatedly took samples from the population. The standard error associated with the coefficients of both the model and that obtained through bootstrapping are shown below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##        (Intercept)     jobblue-collar    jobentrepreneur       jobhousemaid 
##       -2.416485382       -0.346072166       -0.413788618       -0.538843667 
##      jobmanagement         jobretired   jobself-employed        jobservices 
##       -0.189089703        0.196164320       -0.311713723       -0.236414425 
##         jobstudent      jobtechnician      jobunemployed         jobunknown 
##        0.511192792       -0.173019378       -0.177429381       -0.361506746 
## educationsecondary  educationtertiary   educationunknown         housingyes 
##        0.203955264        0.436149134        0.269835962       -0.700007468 
##            loanyes   contacttelephone     contactunknown           monthaug 
##       -0.444875217       -0.175980434       -1.605880094       -0.763099074 
##           monthdec           monthfeb           monthjan           monthjul 
##        0.646688881       -0.251511233       -1.163911847       -0.843156031 
##           monthjun           monthmar           monthmay           monthnov 
##        0.366545869        1.553360619       -0.425837991       -0.874011401 
##           monthoct           monthsep           duration           campaign 
##        0.888103673        0.811484702        0.004190172       -0.086589973 
##      poutcomeother    poutcomesuccess    poutcomeunknown 
##        0.233821843        2.303692088       -0.078536962&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                        Estimate   Std. Error    z value      Pr(&amp;gt;|z|)
## (Intercept)        -2.416485382 1.113856e-01 -21.694773 2.298578e-104
## jobblue-collar     -0.346072166 7.226905e-02  -4.788664  1.678955e-06
## jobentrepreneur    -0.413788618 1.249918e-01  -3.310525  9.312098e-04
## jobhousemaid       -0.538843667 1.354648e-01  -3.977740  6.957349e-05
## jobmanagement      -0.189089703 7.293692e-02  -2.592510  9.527837e-03
## jobretired          0.196164320 8.618864e-02   2.275988  2.284672e-02
## jobself-employed   -0.311713723 1.114374e-01  -2.797210  5.154603e-03
## jobservices        -0.236414425 8.390921e-02  -2.817503  4.839869e-03
## jobstudent          0.511192792 1.044029e-01   4.896346  9.763496e-07
## jobtechnician      -0.173019378 6.880062e-02  -2.514794  1.191020e-02
## jobunemployed      -0.177429381 1.114466e-01  -1.592058  1.113717e-01
## jobunknown         -0.361506746 2.329359e-01  -1.551958  1.206723e-01
## educationsecondary  0.203955264 6.411055e-02   3.181306  1.466128e-03
## educationtertiary   0.436149134 7.395298e-02   5.897654  3.687051e-09
## educationunknown    0.269835962 1.035801e-01   2.605095  9.184878e-03
## housingyes         -0.700007468 4.329460e-02 -16.168472  8.415943e-59
## loanyes            -0.444875217 5.967071e-02  -7.455504  8.952482e-14
## contacttelephone   -0.175980434 7.410680e-02  -2.374687  1.756384e-02
## contactunknown     -1.605880094 7.237608e-02 -22.187993 4.485657e-109
## monthaug           -0.763099074 7.747181e-02  -9.850022  6.852875e-23
## monthdec            0.646688881 1.757141e-01   3.680347  2.329164e-04
## monthfeb           -0.251511233 8.412492e-02  -2.989735  2.792195e-03
## monthjan           -1.163911847 1.196732e-01  -9.725755  2.341610e-22
## monthjul           -0.843156031 7.706815e-02 -10.940395  7.387702e-28
## monthjun            0.366545869 9.019358e-02   4.063991  4.824078e-05
## monthmar            1.553360619 1.187454e-01  13.081435  4.204289e-39
## monthmay           -0.425837991 7.108191e-02  -5.990807  2.088027e-09
## monthnov           -0.874011401 8.371180e-02 -10.440719  1.615814e-25
## monthoct            0.888103673 1.076217e-01   8.252090  1.556480e-16
## monthsep            0.811484702 1.180207e-01   6.875780  6.165138e-12
## duration            0.004190172 6.442787e-05  65.036632  0.000000e+00
## campaign           -0.086589973 1.003337e-02  -8.630197  6.124664e-18
## poutcomeother       0.233821843 8.916180e-02   2.622444  8.730153e-03
## poutcomesuccess     2.303692088 7.959003e-02  28.944480 3.293120e-184
## poutcomeunknown    -0.078536962 5.731654e-02  -1.370232  1.706144e-01&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## ORDINARY NONPARAMETRIC BOOTSTRAP
## 
## 
## Call:
## boot(data = bank_data, statistic = boot_fn_bank, R = 100)
## 
## 
## Bootstrap Statistics :
##          original        bias     std. error
## t1*  -2.416485382 -8.028300e-03 0.1255282876
## t2*  -0.346072166  6.884443e-03 0.0656667243
## t3*  -0.413788618 -1.746870e-02 0.1250063163
## t4*  -0.538843667 -2.632170e-02 0.1506685985
## t5*  -0.189089703 -1.946738e-03 0.0703688067
## t6*   0.196164320  9.726636e-03 0.1007565978
## t7*  -0.311713723  6.681341e-03 0.1118123533
## t8*  -0.236414425  4.509866e-03 0.0777245698
## t9*   0.511192792  1.878887e-02 0.0999970178
## t10* -0.173019378 -2.964749e-03 0.0639570480
## t11* -0.177429381 -1.918871e-02 0.1279365248
## t12* -0.361506746  2.929020e-02 0.2202905524
## t13*  0.203955264  3.677783e-03 0.0710370345
## t14*  0.436149134  2.678866e-03 0.0783973333
## t15*  0.269835962 -7.098522e-03 0.1134082599
## t16* -0.700007468  2.614857e-03 0.0437524671
## t17* -0.444875217  2.541731e-03 0.0564787713
## t18* -0.175980434 -1.769945e-02 0.0788122518
## t19* -1.605880094  2.710617e-03 0.0776266569
## t20* -0.763099074  2.196291e-04 0.0861235310
## t21*  0.646688881 -1.281272e-03 0.2189127383
## t22* -0.251511233 -3.810631e-03 0.0928764444
## t23* -1.163911847 -6.144847e-03 0.1196075241
## t24* -0.843156031 -4.977336e-03 0.0803586902
## t25*  0.366545869 -1.096552e-02 0.0949528655
## t26*  1.553360619  4.760479e-03 0.1289172848
## t27* -0.425837991 -2.116673e-03 0.0731852404
## t28* -0.874011401 -5.277234e-03 0.0887677215
## t29*  0.888103673  1.226003e-02 0.1220745778
## t30*  0.811484702 -3.511322e-02 0.1457014049
## t31*  0.004190172 -5.900232e-07 0.0001029556
## t32* -0.086589973 -2.098398e-03 0.0115775812
## t33*  0.233821843  1.028080e-02 0.0957398188
## t34*  2.303692088  1.141992e-02 0.0869714862
## t35* -0.078536962  3.761925e-03 0.0625711164&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;second-for-linear-regression-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Second For Linear Regression Model:&lt;/h2&gt;
&lt;div id=&#34;the-diamond-ring-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The diamond ring data&lt;/h3&gt;
&lt;p&gt;In this part we used the diamond ring data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 440
## Columns: 9
## $ price         &amp;lt;dbl&amp;gt; 3000, 3000, 3004, 3004, 3006, 3007, 3008, 3010, 3012, 30~
## $ carat         &amp;lt;dbl&amp;gt; 0.92, 0.92, 0.82, 0.81, 0.90, 0.87, 0.80, 0.84, 0.80, 0.~
## $ colour        &amp;lt;chr&amp;gt; &amp;quot;I&amp;quot;, &amp;quot;I&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;G&amp;quot;, &amp;quot;J&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;D&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;D&amp;quot;, &amp;quot;D&amp;quot;, &amp;quot;G&amp;quot;, &amp;quot;~
## $ clarity       &amp;lt;fct&amp;gt; SI2, SI2, SI2, SI1, VS2, SI2, SI2, SI1, SI2, SI2, SI2, S~
## $ cut           &amp;lt;chr&amp;gt; &amp;quot;G&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;I&amp;quot;, &amp;quot;I&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;I&amp;quot;, &amp;quot;I&amp;quot;, &amp;quot;G&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;I&amp;quot;, &amp;quot;~
## $ certification &amp;lt;chr&amp;gt; &amp;quot;AGS&amp;quot;, &amp;quot;AGS&amp;quot;, &amp;quot;GIA&amp;quot;, &amp;quot;GIA&amp;quot;, &amp;quot;GIA&amp;quot;, &amp;quot;AGS&amp;quot;, &amp;quot;GIA&amp;quot;, &amp;quot;GIA&amp;quot;, ~
## $ polish        &amp;lt;chr&amp;gt; &amp;quot;V&amp;quot;, &amp;quot;G&amp;quot;, &amp;quot;X&amp;quot;, &amp;quot;X&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;G&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;~
## $ symmetry      &amp;lt;chr&amp;gt; &amp;quot;V&amp;quot;, &amp;quot;G&amp;quot;, &amp;quot;X&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;X&amp;quot;, &amp;quot;V&amp;quot;, &amp;quot;~
## $ wholesaler    &amp;lt;chr&amp;gt; &amp;quot;1&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;~&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;splitting-the-data-to-training-and-testing-splits-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;splitting the data to training and testing splits&lt;/h3&gt;
&lt;p&gt;In this step we are going to split the data on hands so that 3/4 of the data would be assigned for training and 1/4 of the data would be assigned for testing.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;create-the-linear-regression-model&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;create the linear regression model&lt;/h3&gt;
&lt;p&gt;Creating the linear regression model that will be used to predict the price of the diamond ring of interest.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;creating-the-recipe-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;creating the recipe&lt;/h3&gt;
&lt;p&gt;creating the suitable recipe to apply feature engineering to our data&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;create-workflow-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Create workflow&lt;/h3&gt;
&lt;p&gt;Create a workflow that combine the model and the recipe.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;fit-the-model-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Fit the model&lt;/h3&gt;
&lt;p&gt;Train and fitting the model using the training split of the data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 36 x 5
##    term        estimate std.error statistic  p.value
##    &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
##  1 (Intercept)    2141.     128.      16.7  2.29e-44
##  2 carat           709.      58.5     12.1  1.14e-27
##  3 colour_E       -215.      45.1     -4.75 3.13e- 6
##  4 colour_F       -280.      45.2     -6.20 1.94e- 9
##  5 colour_G       -276.      46.7     -5.91 9.47e- 9
##  6 colour_H       -343.      46.0     -7.46 9.79e-13
##  7 colour_I       -380.      46.4     -8.19 8.25e-15
##  8 colour_J       -435.      49.6     -8.76 1.65e-16
##  9 colour_K       -666.      57.1    -11.7  4.62e-26
## 10 colour_L       -878.      68.3    -12.8  2.92e-30
## # ... with 26 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;make-predictions-for-training-data-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Make predictions for training data&lt;/h3&gt;
&lt;p&gt;Using the trained model for prediction on the training data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 328 x 10
##    .pred price carat colour clarity cut   certification polish symmetry
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;fct&amp;gt;   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;   
##  1 350.    190  0.09 D      SI1     X     IGI           G      G       
##  2 134.    160  0.09 E      SI1     I     IGI           G      G       
##  3  85.6   160  0.09 F      SI1     I     IGI           V      G       
##  4 134.    180  0.09 E      SI1     I     IGI           G      G       
##  5 227.    190  0.09 E      VS1     I     IGI           V      G       
##  6 196.    330  0.1  E      VS2     V     IGI           V      G       
##  7 192.    180  0.1  E      VS2     X     IGI           G      G       
##  8  88.9   160  0.1  F      SI1     X     IGI           G      G       
##  9 142.    160  0.1  E      SI1     V     IGI           G      G       
## 10  60.7   190  0.1  E      SI2     G     IGI           V      G       
## # ... with 318 more rows, and 1 more variable: wholesaler &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;evaluate-performance-on-tarining-data-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Evaluate performance on tarining data&lt;/h3&gt;
&lt;p&gt;Evaluate the performance of the model on the training data.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;R-squared&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 3
##   .metric .estimator .estimate
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
## 1 rsq     standard       0.986&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/a03-resampling-methods/index_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;672&#34; /&gt;
&lt;em&gt;RMSE&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 3
##   .metric .estimator .estimate
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
## 1 rmse    standard        136.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;make-predictions-for-testing-data-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Make predictions for testing data&lt;/h3&gt;
&lt;p&gt;Using the trained model for prediction on the testing data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 112 x 10
##    .pred price carat colour clarity cut   certification polish symmetry
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;fct&amp;gt;   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;   
##  1 3035.  3000  0.92 I      SI2     G     AGS           V      V       
##  2 3028.  3000  0.92 I      SI2     V     AGS           G      G       
##  3 3088.  3006  0.9  J      VS2     V     GIA           V      V       
##  4 3027.  3027  0.81 F      SI1     V     AGS           V      V       
##  5 2957.  3036  0.81 H      SI1     V     GIA           G      V       
##  6 3235.  3041  0.83 D      SI2     G     GIA           G      G       
##  7 3052.  3044  0.91 I      SI2     I     GIA           V      V       
##  8 3000.  3062  0.8  E      SI2     V     GIA           V      V       
##  9   NA   3081  0.9  F      SI2     F     GIA           v      G       
## 10 2956.  3089  0.91 H      SI2     F     GIA           V      V       
## # ... with 102 more rows, and 1 more variable: wholesaler &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;evaluate-performance-on-testing-data-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Evaluate performance on testing data&lt;/h3&gt;
&lt;p&gt;Evaluate the performance of the model on the testing data.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;R-squared&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 3
##   .metric .estimator .estimate
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
## 1 rsq     standard       0.983&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/a03-resampling-methods/index_files/figure-html/unnamed-chunk-26-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;RMSE&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 3
##   .metric .estimator .estimate
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
## 1 rmse    standard        157.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;apply-cross-validation-method-for-model-evaluation-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Apply Cross Validation method for model evaluation&lt;/h2&gt;
&lt;p&gt;We will use the cross-validation resampling method to evaluate the performance of our linear regression model.&lt;/p&gt;
&lt;div id=&#34;split-data-into-folds-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Split data into folds&lt;/h3&gt;
&lt;p&gt;The train data is split-ted into 5 folds&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;fit-resamples-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Fit resamples&lt;/h3&gt;
&lt;p&gt;Fit the folds into the workflow.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;collect-cv-metrics-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Collect CV metrics&lt;/h3&gt;
&lt;p&gt;Show the metrics resulted from Cross-Validation process&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 6
##   .metric .estimator    mean     n std_err .config             
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;        &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;               
## 1 rmse    standard   153.        5 5.07    Preprocessor1_Model1
## 2 rsq     standard     0.983     5 0.00123 Preprocessor1_Model1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;The rsq associated with the model on the training data is 0.99, that associated with the model in the testing data is 0.98 and that associated with the model using cross validation is 0.98. From that we can see that our model is performing good.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;applying-bootstrap-resampling-method-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Applying Bootstrap resampling method&lt;/h2&gt;
&lt;p&gt;In this part we are estimating the accuracy of a Linear Regression Model through the bootstrap approach which can be used to assess the variability of the coefficient estimates (Betas) and predictions from a statistical learning method.&lt;/p&gt;
&lt;p&gt;The standard error reflects the variability between the estimates we would obtain if we repeatedly took samples from the population. The standard error associated with the coefficients of both the model and that obtained through bootstrapping are shown below:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# boot_fn_rings= function (data ,index){
#   return(tidy( wkfl_rings %&amp;gt;%fit(data=data[index,]))) }

boot_fn_rings= function (data ,index ){
return (coef (lm(price ~ .,data =data , subset =index )))}

df2 &amp;lt;- model.matrix( ~ price + carat + colour + clarity+cut + certification + polish + symmetry + wholesaler-1, data = rings_data)

set.seed(103)

summary(lm(price ~ .,data =as.data.frame(df2)))$coef&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                     Estimate Std. Error     t value     Pr(&amp;gt;|t|)
## (Intercept)       -106.56155  175.79890  -0.6061560 5.447516e-01
## carat             1885.30336  133.35039  14.1379667 3.742257e-37
## colourD            895.44460   59.30734  15.0983785 3.695004e-41
## colourE            728.83798   52.92247  13.7718071 1.196791e-35
## colourF            648.29530   52.36663  12.3799311 4.580770e-30
## colourG            665.84244   51.58213  12.9083948 3.708078e-32
## colourH            595.60521   50.56202  11.7796946 9.764476e-28
## colourI            557.81920   49.66629  11.2313443 1.170879e-25
## colourJ            461.05137   49.26745   9.3581342 5.704793e-19
## colourK            199.01441   50.96007   3.9053008 1.102762e-04
## clarityI2         -590.10469   39.59374 -14.9039905 2.424038e-40
## claritySI1         652.27743   37.30949  17.4828817 2.280084e-51
## claritySI2         560.50704   30.84165  18.1737061 2.265758e-54
## claritySI3         290.45599   37.17977   7.8122046 4.902422e-14
## clarityVS1         743.08136   49.56030  14.9934784 1.020529e-40
## clarityVS2         689.49914   43.96568  15.6826658 1.246192e-43
## clarityVVS1       1015.21402  117.33428   8.6523228 1.208576e-16
## clarityVVS2        760.49537   77.07807   9.8665595 1.025130e-20
## cutG                48.81986   30.73652   1.5883339 1.129931e-01
## cutI                84.50708   30.00680   2.8162641 5.096725e-03
## cutV                78.44805   30.50328   2.5717904 1.047401e-02
## cutX                93.37420   26.51667   3.5213390 4.783374e-04
## certificationDOW  -271.24204  164.60408  -1.6478452 1.001619e-01
## certificationEGL  -307.28583   67.95169  -4.5221220 8.057030e-06
## certificationGIA    12.15763   60.44293   0.2011423 8.406885e-01
## certificationIGI  -118.26743   72.53254  -1.6305431 1.037661e-01
## polishG             66.57386   78.84945   0.8443161 3.989925e-01
## polishI            247.69579  115.61368   2.1424436 3.275488e-02
## polishv            136.45426  169.48598   0.8051065 4.212318e-01
## polishV             78.39863   81.67731   0.9598581 3.377007e-01
## polishX             84.85158   83.94039   1.0108553 3.126907e-01
## symmetryG          133.37429   42.42139   3.1440340 1.789425e-03
## symmetryV          151.49072   45.27573   3.3459583 8.967355e-04
## symmetryX          137.39985   50.44279   2.7238747 6.732040e-03
## wholesaler2        112.07125   49.94276   2.2439938 2.537367e-02
## wholesaler3      -1460.66895   78.09862 -18.7028787 1.115682e-56&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;boot(statistic = boot_fn_rings,
                  data = as.data.frame(df2), R = 1000)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## ORDINARY NONPARAMETRIC BOOTSTRAP
## 
## 
## Call:
## boot(data = as.data.frame(df2), statistic = boot_fn_rings, R = 1000)
## 
## 
## Bootstrap Statistics :
##         original      bias    std. error
## t1*   -106.56155 -9.35456333   261.67043
## t2*   1885.30336 16.89859427   177.59923
## t3*    895.44460  2.78838482    99.78342
## t4*    728.83798  1.96797173    88.88759
## t5*    648.29530  0.44403917    88.81436
## t6*    665.84244 -0.87732839    86.79063
## t7*    595.60521  1.51940839    86.22062
## t8*    557.81920  1.08977842    85.60847
## t9*    461.05137 -1.31429699    83.33705
## t10*   199.01441 -5.71033660    81.01659
## t12*  -590.10469 -5.62400852    57.95193
## t13*   652.27743  4.13415624    53.01940
## t14*   560.50704  3.28170559    46.95164
## t15*   290.45599  5.96937782    58.04980
## t16*   743.08136  5.88777718    62.79755
## t17*   689.49914  3.99395348    58.81016
## t18*  1015.21402 10.65485966    80.97264
## t19*   760.49537  4.40900611   103.99886
## t20*    48.81986 -3.96590696    42.73852
## t21*    84.50708 -2.33151751    37.91071
## t22*    78.44805 -2.30491726    32.90870
## t23*    93.37420 -1.88620077    34.89901
## t24*  -271.24204 -1.08968639    78.50134
## t25*  -307.28583 -2.51905597    53.47293
## t26*    12.15763  0.16925914    30.04501
## t27*  -118.26743  2.50044800    49.52972
## t28*    66.57386 -7.36747324   136.36556
## t29*   247.69579 -8.64360605   133.21323
## t30*   136.45426 -7.91079733   139.81229
## t31*    78.39863 -7.36281044   140.63048
## t32*    84.85158 -6.72228927   141.11272
## t33*   133.37429  0.59236148    62.87303
## t35*   151.49072 -0.05086443    65.82882
## t36*   137.39985  1.01165019    67.30974
## t37*   112.07125  0.30607925    62.57052
## t38* -1460.66895  8.51131528    99.28839
## WARNING: All values of t11* are NA
## WARNING: All values of t34* are NA&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Project </title>
      <link>/post/the-project/</link>
      <pubDate>Mon, 21 Jun 2021 00:00:00 +0000</pubDate>
      <guid>/post/the-project/</guid>
      <description>
&lt;script src=&#34;/post/the-project/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;section-the-dataset&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The dataset&lt;/h2&gt;
&lt;p&gt;The used data set in this project composed of a record of 7 common different fish species in fish market sales. For each fish participated on this record, a certain measurements were taken, which are the fish species, the weight in Gram g, vertical length in cm, diagonal length in cm, cross length in cm, height in cm and diagonal width in cm.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;fish.png&#34; width=&#34;98%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The data was obtained from &lt;strong&gt;Kaggle &lt;/strong&gt; website, to access the source of the data use the link below&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.kaggle.com/aungpyaeap/fish-market&#34; target=&#34;_blank&#34;&gt;Link to the dataset&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;section-explanatory-data-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Explanatory data analysis&lt;/h2&gt;
&lt;p&gt;In this part we are going to create a data profiling report, in this report we can get an overview of the shape and structure of our dataset by summarizing their main characters and use statistical graphics and other data visualization methods.&lt;/p&gt;
&lt;iframe height=&#34;800&#34; width=&#34;100%&#34; frameborder=&#34;no&#34; src=&#34;./report.html/&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;Based on the data profiling report, specifically in the Univariate Distribution Histogram part , We can see that there are some fishes in our data set with zero weights, we need to remove the rows where the weight equal to zero.&lt;/p&gt;
&lt;p&gt;To access the &lt;strong&gt;Data Profiling Report&lt;/strong&gt; in a new window please press the link below
&lt;a href=&#34;./report.html&#34; target=&#34;_blank&#34;&gt;Link to open the data profiling report in a new window&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this part we can interactively perform further exploration to our data set.&lt;/p&gt;
&lt;iframe height=&#34;1000&#34; width=&#34;100%&#34; frameborder=&#34;no&#34; src=&#34;https://nouran.shinyapps.io/2021-06-21-project/&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;To open the &lt;strong&gt;Shiny app&lt;/strong&gt; in a new window please press the link below
&lt;a href=&#34;https://nouran.shinyapps.io/2021-06-21-project/&#34; target=&#34;_blank&#34;&gt;Link to open the Shiny app in a new window&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;section-fitting-a-model-to-predict-the-fish-height-based-on-its-cross-length&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Fitting a model to predict the fish height based on it’s cross length&lt;/h1&gt;
&lt;div id=&#34;section-linear-regression-model&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Linear Regression Model&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;To create a liner regression model to predict the height of a fish given its cross length, we need to determine the value of &lt;span class=&#34;math inline&#34;&gt;\(\beta_0\)&lt;/span&gt; that is the population parameter for the intercept and the value of &lt;span class=&#34;math inline&#34;&gt;\(\beta_1\)&lt;/span&gt; that is the population parameter for the slope as shown in the following model:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\widehat{Height}_{i} = \beta_0 + \beta_1 \times Cross Length_{i}\]&lt;/span&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;After determining the values of both &lt;span class=&#34;math inline&#34;&gt;\(\beta_0\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\beta_1\)&lt;/span&gt;, the updated linear regression model with the values of &lt;span class=&#34;math inline&#34;&gt;\(\beta_0\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\beta_1\)&lt;/span&gt; is shown as follow:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\widehat{Height}_{i} = 0.87 + 0.26 \times Cross Length_{i}\]&lt;/span&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;From the above model we can see that :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Slope: For each additional cm the fish is longer, the height is expected to be higher, on average, by 0.26 cm.&lt;/li&gt;
&lt;li&gt;Intercept: fish that is 8.8 cm tall (minimum cross length value among the dataset) is expected to be 3.2 cm high, on average.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;section-the-data-is-shown-in-the-following-plot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The data is shown in the following plot:&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/post/the-project/index_files/figure-html/height-cross_length-plot-1.png&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;section-the-data-and-the-least-square-line-are-shown-in-the-following-plot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The data and the least square line are shown in the following plot:&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/post/the-project/index_files/figure-html/heightcross_length-plot-1.png&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;section-the-data-the-least-square-line-and-the-residuales-are-shown-in-the-following-plot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The data, the least square line and the residuales are shown in the following plot:&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/post/the-project/index_files/figure-html/vis-res-1-1.png&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Fitting and Interpreting models </title>
      <link>/post/fitting-and-interpreting-models/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
      <guid>/post/fitting-and-interpreting-models/</guid>
      <description>
&lt;script src=&#34;/post/fitting-and-interpreting-models/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/post/fitting-and-interpreting-models/index_files/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/post/fitting-and-interpreting-models/index_files/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;


&lt;div id=&#34;import-libraries&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Import Libraries&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&#34;import-data-paris-paintings&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Import Data: Paris Paintings&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pp &amp;lt;- read_csv(&amp;quot;paris-paintings.csv&amp;quot;, na = c(&amp;quot;n/a&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;NA&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   .default = col_double(),
##   name = col_character(),
##   sale = col_character(),
##   lot = col_character(),
##   dealer = col_character(),
##   origin_author = col_character(),
##   origin_cat = col_character(),
##   school_pntg = col_character(),
##   price = col_number(),
##   subject = col_character(),
##   authorstandard = col_character(),
##   authorstyle = col_character(),
##   author = col_character(),
##   winningbidder = col_character(),
##   winningbiddertype = col_character(),
##   endbuyer = col_character(),
##   type_intermed = col_character(),
##   Shape = col_character(),
##   material = col_character(),
##   mat = col_character(),
##   materialCat = col_character()
## )
## i Use `spec()` for the full column specifications.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;goal-predict-height-from-width&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Goal: Predict height from width&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\widehat{height}_{i} = \beta_0 + \beta_1 \times width_{i}\]&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/fitting-and-interpreting-models/index_files/figure-html/height-width-plot-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;tidymodels.png&#34; width=&#34;98%&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;step-1-specify-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 1: Specify model&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;linear_reg()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Linear Regression Model Specification (regression)&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;step-2-set-model-fitting-engine&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 2: Set model fitting &lt;em&gt;engine&lt;/em&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;linear_reg() %&amp;gt;%
  set_engine(&amp;quot;lm&amp;quot;) # lm: linear model&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Linear Regression Model Specification (regression)
## 
## Computational engine: lm&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;step-3-fit-model-estimate-parameters&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 3: Fit model &amp;amp; estimate parameters&lt;/h2&gt;
&lt;p&gt;… using &lt;strong&gt;formula syntax&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;linear_reg() %&amp;gt;%
  set_engine(&amp;quot;lm&amp;quot;) %&amp;gt;%
  fit(Height_in ~ Width_in, data = pp)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## parsnip model object
## 
## Fit time:  0ms 
## 
## Call:
## stats::lm(formula = Height_in ~ Width_in, data = data)
## 
## Coefficients:
## (Intercept)     Width_in  
##      3.6214       0.7808&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;a-closer-look-at-model-output&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;A closer look at model output&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## parsnip model object
## 
## Fit time:  0ms 
## 
## Call:
## stats::lm(formula = Height_in ~ Width_in, data = data)
## 
## Coefficients:
## (Intercept)     Width_in  
##      3.6214       0.7808&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;.large[
&lt;span class=&#34;math display&#34;&gt;\[\widehat{height}_{i} = 3.6214 + 0.7808 \times width_{i}\]&lt;/span&gt;]&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;a-tidy-look-at-model-output&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;A tidy look at model output&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;linear_reg() %&amp;gt;%
  set_engine(&amp;quot;lm&amp;quot;) %&amp;gt;%
  fit(Height_in ~ Width_in, data = pp) %&amp;gt;%
  tidy()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 5
##   term        estimate std.error statistic  p.value
##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 (Intercept)    3.62    0.254        14.3 8.82e-45
## 2 Width_in       0.781   0.00950      82.1 0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;.large[
&lt;span class=&#34;math display&#34;&gt;\[\widehat{height}_{i} = 3.62 + 0.781 \times width_{i}\]&lt;/span&gt;]&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;slope-and-intercept&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Slope and intercept&lt;/h2&gt;
&lt;p&gt;.large[
&lt;span class=&#34;math display&#34;&gt;\[\widehat{height}_{i} = 3.62 + 0.781 \times width_{i}\]&lt;/span&gt;]&lt;/p&gt;
&lt;p&gt;–&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Slope:&lt;/strong&gt; For each additional inch the painting is wider, the height is expected to be higher, on average, by 0.781 inches.&lt;/li&gt;
&lt;/ul&gt;
&lt;table style=&#34;width:4%;&#34;&gt;
&lt;colgroup&gt;
&lt;col width=&#34;4%&#34; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;- &lt;strong&gt;Intercept:&lt;/strong&gt; Paintings that are 0 inches wide are expected to be 3.62 inches high, on average. (Does this make sense?)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;correlation-does-not-imply-causation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Correlation does not imply causation&lt;/h2&gt;
&lt;p&gt;Remember this when interpreting model coefficients&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;cell_phones.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;.footnote[
Source: XKCD, &lt;a href=&#34;https://xkcd.com/925/&#34;&gt;Cell phones&lt;/a&gt;]&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;class: middle&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;parameter-estimation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Parameter estimation&lt;/h1&gt;
&lt;hr /&gt;
&lt;div id=&#34;linear-model-with-a-single-predictor&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Linear model with a single predictor&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;We’re interested in &lt;span class=&#34;math inline&#34;&gt;\(\beta_0\)&lt;/span&gt; (population parameter for the intercept) and &lt;span class=&#34;math inline&#34;&gt;\(\beta_1\)&lt;/span&gt; (population parameter for the slope) in the following model:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\hat{y}_{i} = \beta_0 + \beta_1~x_{i}\]&lt;/span&gt;&lt;/p&gt;
&lt;table style=&#34;width:4%;&#34;&gt;
&lt;colgroup&gt;
&lt;col width=&#34;4%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;- Tough luck, you can’t have them…&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;- So we use sample statistics to estimate them:&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math display&#34;&gt;\[\hat{y}_{i} = b_0 + b_1~x_{i}\]&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;least-squares-regression&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Least squares regression&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The regression line minimizes the sum of squared residuals.&lt;/li&gt;
&lt;/ul&gt;
&lt;table style=&#34;width:4%;&#34;&gt;
&lt;colgroup&gt;
&lt;col width=&#34;4%&#34; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;- If &lt;span class=&#34;math inline&#34;&gt;\(e_i = y_i - \hat{y}_i\)&lt;/span&gt;, then, the regression line minimizes
&lt;span class=&#34;math inline&#34;&gt;\(\sum_{i = 1}^n e_i^2\)&lt;/span&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;visualizing-residuals&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Visualizing residuals&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;/post/fitting-and-interpreting-models/index_files/figure-html/vis-res-1-1.png&#34; width=&#34;70%&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;visualizing-residuals-cont.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Visualizing residuals (cont.)&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/fitting-and-interpreting-models/index_files/figure-html/vis-res-2-1.png&#34; width=&#34;70%&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;visualizing-residuals-cont.-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Visualizing residuals (cont.)&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/fitting-and-interpreting-models/index_files/figure-html/vis-res-3-1.png&#34; width=&#34;70%&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;properties-of-least-squares-regression&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Properties of least squares regression&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The regression line goes through the center of mass point, the coordinates corresponding to average &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; and average &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\((\bar{x}, \bar{y})\)&lt;/span&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\bar{y} = b_0 + b_1 \bar{x} ~ \rightarrow ~ b_0 = \bar{y} - b_1 \bar{x}\]&lt;/span&gt;&lt;/p&gt;
&lt;table style=&#34;width:4%;&#34;&gt;
&lt;colgroup&gt;
&lt;col width=&#34;4%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;- The slope has the same sign as the correlation coefficient: &lt;span class=&#34;math inline&#34;&gt;\(b_1 = r \frac{s_y}{s_x}\)&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;- The sum of the residuals is zero: &lt;span class=&#34;math inline&#34;&gt;\(\sum_{i = 1}^n e_i = 0\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;The residuals and &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; values are uncorrelated&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;class: middle&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;models-with-categorical-explanatory-variables&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Models with categorical explanatory variables&lt;/h1&gt;
&lt;hr /&gt;
&lt;div id=&#34;categorical-predictor-with-2-levels&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Categorical predictor with 2 levels&lt;/h2&gt;
&lt;p&gt;.pull-left-narrow[
.small[&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3,393 x 3
##    name      Height_in landsALL
##    &amp;lt;chr&amp;gt;         &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
##  1 L1764-2          37        0
##  2 L1764-3          18        0
##  3 L1764-4          13        1
##  4 L1764-5a         14        1
##  5 L1764-5b         14        1
##  6 L1764-6           7        0
##  7 L1764-7a          6        0
##  8 L1764-7b          6        0
##  9 L1764-8          15        0
## 10 L1764-9a          9        0
## 11 L1764-9b          9        0
## 12 L1764-10a        16        1
## 13 L1764-10b        16        1
## 14 L1764-10c        16        1
## 15 L1764-11         20        0
## 16 L1764-12a        14        1
## 17 L1764-12b        14        1
## 18 L1764-13a        15        1
## 19 L1764-13b        15        1
## 20 L1764-14         37        0
## # ... with 3,373 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;]
]
.pull-right-wide[
- &lt;code&gt;landsALL = 0&lt;/code&gt;: No landscape features
- &lt;code&gt;landsALL = 1&lt;/code&gt;: Some landscape features]&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;height-landscape-features&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Height &amp;amp; landscape features&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;linear_reg() %&amp;gt;%
  set_engine(&amp;quot;lm&amp;quot;) %&amp;gt;%
  fit(Height_in ~ factor(landsALL), data = pp) %&amp;gt;%
  tidy()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 5
##   term              estimate std.error statistic  p.value
##   &amp;lt;chr&amp;gt;                &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 (Intercept)          22.7      0.328      69.1 0       
## 2 factor(landsALL)1    -5.65     0.532     -10.6 7.97e-26&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;height-landscape-features-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Height &amp;amp; landscape features&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\widehat{Height_{in}} = 22.7 - 5.645~landsALL\]&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Slope:&lt;/strong&gt; Paintings with landscape features are expected, on average, to be 5.645 inches shorter than paintings that without landscape features
&lt;ul&gt;
&lt;li&gt;Compares baseline level (&lt;code&gt;landsALL = 0&lt;/code&gt;) to the other level (&lt;code&gt;landsALL = 1&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Intercept:&lt;/strong&gt; Paintings that don’t have landscape features are expected, on average, to be 22.7 inches tall&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;relationship-between-height-and-school&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Relationship between height and school&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;linear_reg() %&amp;gt;%
  set_engine(&amp;quot;lm&amp;quot;) %&amp;gt;%
  fit(Height_in ~ school_pntg, data = pp) %&amp;gt;%
  tidy()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 7 x 5
##   term            estimate std.error statistic p.value
##   &amp;lt;chr&amp;gt;              &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 (Intercept)        14.0       10.0     1.40  0.162  
## 2 school_pntgD/FL     2.33      10.0     0.232 0.816  
## 3 school_pntgF       10.2       10.0     1.02  0.309  
## 4 school_pntgG        1.65      11.9     0.139 0.889  
## 5 school_pntgI       10.3       10.0     1.02  0.306  
## 6 school_pntgS       30.4       11.4     2.68  0.00744
## 7 school_pntgX        2.87      10.3     0.279 0.780&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;dummy-variables&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Dummy variables&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 7 x 5
##   term            estimate std.error statistic p.value
##   &amp;lt;chr&amp;gt;              &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 (Intercept)        14.0       10.0     1.40  0.162  
## 2 school_pntgD/FL     2.33      10.0     0.232 0.816  
## 3 school_pntgF       10.2       10.0     1.02  0.309  
## 4 school_pntgG        1.65      11.9     0.139 0.889  
## 5 school_pntgI       10.3       10.0     1.02  0.306  
## 6 school_pntgS       30.4       11.4     2.68  0.00744
## 7 school_pntgX        2.87      10.3     0.279 0.780&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;When the categorical explanatory variable has many levels, they’re encoded to &lt;strong&gt;dummy variables&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Each coefficient describes the expected difference between heights in that particular school compared to the baseline level&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;categorical-predictor-with-3-levels&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Categorical predictor with 3+ levels&lt;/h2&gt;
.pull-left-wide[
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
school_pntg
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
D_FL
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
F
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
G
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
I
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
S
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
X
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
A
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
D/FL
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(122, 209, 81, 1) !important;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
F
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(122, 209, 81, 1) !important;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
G
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(122, 209, 81, 1) !important;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
I
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(122, 209, 81, 1) !important;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
S
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(122, 209, 81, 1) !important;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
X
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(68, 1, 84, 1) !important;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; color: white !important;background-color: rgba(122, 209, 81, 1) !important;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;]
.pull-right-narrow[
.small[&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3,393 x 3
##    name      Height_in school_pntg
##    &amp;lt;chr&amp;gt;         &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;      
##  1 L1764-2          37 F          
##  2 L1764-3          18 I          
##  3 L1764-4          13 D/FL       
##  4 L1764-5a         14 F          
##  5 L1764-5b         14 F          
##  6 L1764-6           7 I          
##  7 L1764-7a          6 F          
##  8 L1764-7b          6 F          
##  9 L1764-8          15 I          
## 10 L1764-9a          9 D/FL       
## 11 L1764-9b          9 D/FL       
## 12 L1764-10a        16 X          
## 13 L1764-10b        16 X          
## 14 L1764-10c        16 X          
## 15 L1764-11         20 D/FL       
## 16 L1764-12a        14 D/FL       
## 17 L1764-12b        14 D/FL       
## 18 L1764-13a        15 D/FL       
## 19 L1764-13b        15 D/FL       
## 20 L1764-14         37 F          
## # ... with 3,373 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;]
]&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;relationship-between-height-and-school-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Relationship between height and school&lt;/h2&gt;
&lt;p&gt;.small[&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 7 x 5
##   term            estimate std.error statistic p.value
##   &amp;lt;chr&amp;gt;              &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 (Intercept)        14.0       10.0     1.40  0.162  
## 2 school_pntgD/FL     2.33      10.0     0.232 0.816  
## 3 school_pntgF       10.2       10.0     1.02  0.309  
## 4 school_pntgG        1.65      11.9     0.139 0.889  
## 5 school_pntgI       10.3       10.0     1.02  0.306  
## 6 school_pntgS       30.4       11.4     2.68  0.00744
## 7 school_pntgX        2.87      10.3     0.279 0.780&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Austrian school (A)&lt;/strong&gt; paintings are expected, on average, to be &lt;strong&gt;14 inches&lt;/strong&gt; tall.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dutch/Flemish school (D/FL)&lt;/strong&gt; paintings are expected, on average, to be &lt;strong&gt;2.33 inches taller&lt;/strong&gt; than &lt;em&gt;Austrian school&lt;/em&gt; paintings.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;French school (F)&lt;/strong&gt; paintings are expected, on average, to be &lt;strong&gt;10.2 inches taller&lt;/strong&gt; than &lt;em&gt;Austrian school&lt;/em&gt; paintings.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;German school (G)&lt;/strong&gt; paintings are expected, on average, to be &lt;strong&gt;1.65 inches taller&lt;/strong&gt; than &lt;em&gt;Austrian school&lt;/em&gt; paintings.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Italian school (I)&lt;/strong&gt; paintings are expected, on average, to be &lt;strong&gt;10.3 inches taller&lt;/strong&gt; than &lt;em&gt;Austrian school&lt;/em&gt; paintings.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spanish school (S)&lt;/strong&gt; paintings are expected, on average, to be &lt;strong&gt;30.4 inches taller&lt;/strong&gt; than &lt;em&gt;Austrian school&lt;/em&gt; paintings.&lt;/li&gt;
&lt;li&gt;Paintings whose school is &lt;strong&gt;unknown (X)&lt;/strong&gt; are expected, on average, to be &lt;strong&gt;2.87 inches taller&lt;/strong&gt; than &lt;em&gt;Austrian school&lt;/em&gt; paintings.
]&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
